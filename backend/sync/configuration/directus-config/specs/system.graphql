type Query {
  server_specs_oas: JSON
  server_specs_graphql(scope: graphql_sdl_scope): String
  server_ping: String
  server_info: server_info
  server_health: JSON
  collections: [directus_collections!]!
  collections_by_name(name: String!): directus_collections
  fields: [directus_fields!]!
  fields_in_collection(collection: String!): [directus_fields!]!
  fields_by_name(collection: String!, field: String!): directus_fields
  relations: [directus_relations!]!
  relations_in_collection(collection: String!): [directus_relations!]!
  relations_by_name(collection: String!, field: String!): directus_relations
  extensions: [directus_extensions!]!
  users_me: directus_users
  permissions_me: permissions_me_type
  roles_me: [directus_roles]
  policies_me_globals: policy_me_globals_type
  access(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access!]!
  access_by_id(id: ID!, version: String): directus_access
  access_aggregated(groupBy: [String], filter: directus_access_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_access_aggregated!]!
  activity(filter: directus_activity_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_activity!]!
  activity_by_id(id: ID!, version: String): directus_activity
  activity_aggregated(groupBy: [String], filter: directus_activity_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_activity_aggregated!]!
  comments(filter: directus_comments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_comments!]!
  comments_by_id(id: ID!, version: String): directus_comments
  comments_aggregated(groupBy: [String], filter: directus_comments_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_comments_aggregated!]!
  dashboards(filter: directus_dashboards_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_dashboards!]!
  dashboards_by_id(id: ID!, version: String): directus_dashboards
  dashboards_aggregated(groupBy: [String], filter: directus_dashboards_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_dashboards_aggregated!]!
  folders(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_folders!]!
  folders_by_id(id: ID!, version: String): directus_folders
  folders_aggregated(groupBy: [String], filter: directus_folders_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_folders_aggregated!]!
  policies(filter: directus_policies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_policies!]!
  policies_by_id(id: ID!, version: String): directus_policies
  policies_aggregated(groupBy: [String], filter: directus_policies_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_policies_aggregated!]!
  notifications(filter: directus_notifications_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_notifications!]!
  notifications_by_id(id: ID!, version: String): directus_notifications
  notifications_aggregated(groupBy: [String], filter: directus_notifications_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_notifications_aggregated!]!
  operations(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_operations!]!
  operations_by_id(id: ID!, version: String): directus_operations
  operations_aggregated(groupBy: [String], filter: directus_operations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_operations_aggregated!]!
  panels(filter: directus_panels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_panels!]!
  panels_by_id(id: ID!, version: String): directus_panels
  panels_aggregated(groupBy: [String], filter: directus_panels_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_panels_aggregated!]!
  permissions(filter: directus_permissions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_permissions!]!
  permissions_by_id(id: ID!, version: String): directus_permissions
  permissions_aggregated(groupBy: [String], filter: directus_permissions_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_permissions_aggregated!]!
  files(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_files!]!
  files_by_id(id: ID!, version: String): directus_files
  files_aggregated(groupBy: [String], filter: directus_files_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_files_aggregated!]!
  flows(filter: directus_flows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_flows!]!
  flows_by_id(id: ID!, version: String): directus_flows
  flows_aggregated(groupBy: [String], filter: directus_flows_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_flows_aggregated!]!
  versions(filter: directus_versions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_versions!]!
  versions_by_id(id: ID!, version: String): directus_versions
  versions_aggregated(groupBy: [String], filter: directus_versions_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_versions_aggregated!]!
  presets(filter: directus_presets_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_presets!]!
  presets_by_id(id: ID!, version: String): directus_presets
  presets_aggregated(groupBy: [String], filter: directus_presets_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_presets_aggregated!]!
  settings(version: String): directus_settings
  webhooks(filter: directus_webhooks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_webhooks!]!
  webhooks_by_id(id: ID!, version: String): directus_webhooks
  webhooks_aggregated(groupBy: [String], filter: directus_webhooks_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_webhooks_aggregated!]!
  translations(filter: directus_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_translations!]!
  translations_by_id(id: ID!, version: String): directus_translations
  translations_aggregated(groupBy: [String], filter: directus_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_translations_aggregated!]!
  roles(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_roles!]!
  roles_by_id(id: ID!, version: String): directus_roles
  roles_aggregated(groupBy: [String], filter: directus_roles_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_roles_aggregated!]!
  shares(filter: directus_shares_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_shares!]!
  shares_by_id(id: ID!, version: String): directus_shares
  shares_aggregated(groupBy: [String], filter: directus_shares_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_shares_aggregated!]!
  users(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_users!]!
  users_by_id(id: ID!, version: String): directus_users
  users_aggregated(groupBy: [String], filter: directus_users_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_users_aggregated!]!
  revisions(filter: directus_revisions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_revisions!]!
  revisions_by_id(id: ID!, version: String): directus_revisions
  revisions_aggregated(groupBy: [String], filter: directus_revisions_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_revisions_aggregated!]!
}

type Mutation {
  auth_login(email: String!, password: String!, mode: auth_mode, otp: String): auth_tokens
  auth_refresh(refresh_token: String, mode: auth_mode): auth_tokens
  auth_logout(refresh_token: String, mode: auth_mode): Boolean
  auth_password_request(email: String!, reset_url: String): Boolean
  auth_password_reset(token: String!, password: String!): Boolean
  users_me_tfa_generate(password: String!): users_me_tfa_generate_data
  users_me_tfa_enable(otp: String!, secret: String!): Boolean
  users_me_tfa_disable(otp: String!): Boolean
  utils_random_string(length: Int): String
  utils_hash_generate(string: String!): String
  utils_hash_verify(string: String!, hash: String!): Boolean
  utils_sort(collection: String!, item: ID!, to: ID!): Boolean
  utils_revert(revision: ID!): Boolean
  utils_cache_clear: Void
  users_invite_accept(token: String!, password: String!): Boolean
  users_register(email: String!, password: String!, verification_url: String, first_name: String, last_name: String): Boolean
  users_register_verify(token: String!): Boolean
  create_collections_item(data: create_directus_collections_input!): directus_collections
  update_collections_item(collection: String!, data: update_directus_collections_input!): directus_collections
  delete_collections_item(collection: String!): delete_collection
  create_fields_item(collection: String!, data: create_directus_fields_input!): directus_fields
  update_fields_item(collection: String!, field: String!, data: update_directus_fields_input!): directus_fields
  delete_fields_item(collection: String!, field: String!): delete_field
  create_relations_item(data: create_directus_relations_input!): directus_relations
  update_relations_item(collection: String!, field: String!, data: update_directus_relations_input!): directus_relations
  delete_relations_item(collection: String!, field: String!): delete_relation
  update_extensions_item(id: ID, data: update_directus_extensions_inputInput): directus_extensions
  update_users_me(data: update_directus_users_input): directus_users
  import_file(url: String!, data: create_directus_files_input): directus_files
  users_invite(email: String!, role: String!, invite_url: String): Boolean
  create_access_items(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_access_input!]): [directus_access!]!
  create_access_item(data: create_directus_access_input!): directus_access
  create_comments_items(filter: directus_comments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_comments_input!]): [directus_comments!]!
  create_comments_item(data: create_directus_comments_input!): directus_comments
  create_dashboards_items(filter: directus_dashboards_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_dashboards_input!]): [directus_dashboards!]!
  create_dashboards_item(data: create_directus_dashboards_input!): directus_dashboards
  create_folders_items(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_folders_input!]): [directus_folders!]!
  create_folders_item(data: create_directus_folders_input!): directus_folders
  create_policies_items(filter: directus_policies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_policies_input!]): [directus_policies!]!
  create_policies_item(data: create_directus_policies_input!): directus_policies
  create_notifications_items(filter: directus_notifications_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_notifications_input!]): [directus_notifications!]!
  create_notifications_item(data: create_directus_notifications_input!): directus_notifications
  create_operations_items(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_operations_input!]): [directus_operations!]!
  create_operations_item(data: create_directus_operations_input!): directus_operations
  create_panels_items(filter: directus_panels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_panels_input!]): [directus_panels!]!
  create_panels_item(data: create_directus_panels_input!): directus_panels
  create_permissions_items(filter: directus_permissions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_permissions_input!]): [directus_permissions!]!
  create_permissions_item(data: create_directus_permissions_input!): directus_permissions
  create_files_items(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_files_input!]): [directus_files!]!
  create_files_item(data: create_directus_files_input!): directus_files
  create_flows_items(filter: directus_flows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_flows_input!]): [directus_flows!]!
  create_flows_item(data: create_directus_flows_input!): directus_flows
  create_versions_items(filter: directus_versions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_versions_input!]): [directus_versions!]!
  create_versions_item(data: create_directus_versions_input!): directus_versions
  create_presets_items(filter: directus_presets_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_presets_input!]): [directus_presets!]!
  create_presets_item(data: create_directus_presets_input!): directus_presets
  create_webhooks_items(filter: directus_webhooks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_webhooks_input!]): [directus_webhooks!]!
  create_webhooks_item(data: create_directus_webhooks_input!): directus_webhooks
  create_translations_items(filter: directus_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_translations_input!]): [directus_translations!]!
  create_translations_item(data: create_directus_translations_input!): directus_translations
  create_roles_items(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_roles_input!]): [directus_roles!]!
  create_roles_item(data: create_directus_roles_input!): directus_roles
  create_shares_items(filter: directus_shares_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_shares_input!]): [directus_shares!]!
  create_shares_item(data: create_directus_shares_input!): directus_shares
  create_users_items(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_users_input!]): [directus_users!]!
  create_users_item(data: create_directus_users_input!): directus_users
  update_access_items(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_access_input!): [directus_access!]!
  update_access_batch(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_access_input!]): [directus_access!]!
  update_access_item(id: ID!, data: update_directus_access_input!): directus_access
  update_comments_items(filter: directus_comments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_comments_input!): [directus_comments!]!
  update_comments_batch(filter: directus_comments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_comments_input!]): [directus_comments!]!
  update_comments_item(id: ID!, data: update_directus_comments_input!): directus_comments
  update_dashboards_items(filter: directus_dashboards_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_dashboards_input!): [directus_dashboards!]!
  update_dashboards_batch(filter: directus_dashboards_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_dashboards_input!]): [directus_dashboards!]!
  update_dashboards_item(id: ID!, data: update_directus_dashboards_input!): directus_dashboards
  update_folders_items(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_folders_input!): [directus_folders!]!
  update_folders_batch(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_folders_input!]): [directus_folders!]!
  update_folders_item(id: ID!, data: update_directus_folders_input!): directus_folders
  update_policies_items(filter: directus_policies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_policies_input!): [directus_policies!]!
  update_policies_batch(filter: directus_policies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_policies_input!]): [directus_policies!]!
  update_policies_item(id: ID!, data: update_directus_policies_input!): directus_policies
  update_notifications_items(filter: directus_notifications_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_notifications_input!): [directus_notifications!]!
  update_notifications_batch(filter: directus_notifications_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_notifications_input!]): [directus_notifications!]!
  update_notifications_item(id: ID!, data: update_directus_notifications_input!): directus_notifications
  update_operations_items(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_operations_input!): [directus_operations!]!
  update_operations_batch(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_operations_input!]): [directus_operations!]!
  update_operations_item(id: ID!, data: update_directus_operations_input!): directus_operations
  update_panels_items(filter: directus_panels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_panels_input!): [directus_panels!]!
  update_panels_batch(filter: directus_panels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_panels_input!]): [directus_panels!]!
  update_panels_item(id: ID!, data: update_directus_panels_input!): directus_panels
  update_permissions_items(filter: directus_permissions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_permissions_input!): [directus_permissions!]!
  update_permissions_batch(filter: directus_permissions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_permissions_input!]): [directus_permissions!]!
  update_permissions_item(id: ID!, data: update_directus_permissions_input!): directus_permissions
  update_files_items(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_files_input!): [directus_files!]!
  update_files_batch(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_files_input!]): [directus_files!]!
  update_files_item(id: ID!, data: update_directus_files_input!): directus_files
  update_flows_items(filter: directus_flows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_flows_input!): [directus_flows!]!
  update_flows_batch(filter: directus_flows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_flows_input!]): [directus_flows!]!
  update_flows_item(id: ID!, data: update_directus_flows_input!): directus_flows
  update_versions_items(filter: directus_versions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_versions_input!): [directus_versions!]!
  update_versions_batch(filter: directus_versions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_versions_input!]): [directus_versions!]!
  update_versions_item(id: ID!, data: update_directus_versions_input!): directus_versions
  update_presets_items(filter: directus_presets_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_presets_input!): [directus_presets!]!
  update_presets_batch(filter: directus_presets_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_presets_input!]): [directus_presets!]!
  update_presets_item(id: ID!, data: update_directus_presets_input!): directus_presets
  update_settings(data: update_directus_settings_input!): directus_settings
  update_webhooks_items(filter: directus_webhooks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_webhooks_input!): [directus_webhooks!]!
  update_webhooks_batch(filter: directus_webhooks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_webhooks_input!]): [directus_webhooks!]!
  update_webhooks_item(id: ID!, data: update_directus_webhooks_input!): directus_webhooks
  update_translations_items(filter: directus_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_translations_input!): [directus_translations!]!
  update_translations_batch(filter: directus_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_translations_input!]): [directus_translations!]!
  update_translations_item(id: ID!, data: update_directus_translations_input!): directus_translations
  update_roles_items(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_roles_input!): [directus_roles!]!
  update_roles_batch(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_roles_input!]): [directus_roles!]!
  update_roles_item(id: ID!, data: update_directus_roles_input!): directus_roles
  update_shares_items(filter: directus_shares_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_shares_input!): [directus_shares!]!
  update_shares_batch(filter: directus_shares_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_shares_input!]): [directus_shares!]!
  update_shares_item(id: ID!, data: update_directus_shares_input!): directus_shares
  update_users_items(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_users_input!): [directus_users!]!
  update_users_batch(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_users_input!]): [directus_users!]!
  update_users_item(id: ID!, data: update_directus_users_input!): directus_users
  delete_access_items(ids: [ID]!): delete_many
  delete_access_item(id: ID!): delete_one
  delete_comments_items(ids: [ID]!): delete_many
  delete_comments_item(id: ID!): delete_one
  delete_dashboards_items(ids: [ID]!): delete_many
  delete_dashboards_item(id: ID!): delete_one
  delete_folders_items(ids: [ID]!): delete_many
  delete_folders_item(id: ID!): delete_one
  delete_policies_items(ids: [ID]!): delete_many
  delete_policies_item(id: ID!): delete_one
  delete_notifications_items(ids: [ID]!): delete_many
  delete_notifications_item(id: ID!): delete_one
  delete_operations_items(ids: [ID]!): delete_many
  delete_operations_item(id: ID!): delete_one
  delete_panels_items(ids: [ID]!): delete_many
  delete_panels_item(id: ID!): delete_one
  delete_permissions_items(ids: [ID]!): delete_many
  delete_permissions_item(id: ID!): delete_one
  delete_files_items(ids: [ID]!): delete_many
  delete_files_item(id: ID!): delete_one
  delete_flows_items(ids: [ID]!): delete_many
  delete_flows_item(id: ID!): delete_one
  delete_versions_items(ids: [ID]!): delete_many
  delete_versions_item(id: ID!): delete_one
  delete_presets_items(ids: [ID]!): delete_many
  delete_presets_item(id: ID!): delete_one
  delete_webhooks_items(ids: [ID]!): delete_many
  delete_webhooks_item(id: ID!): delete_one
  delete_translations_items(ids: [ID]!): delete_many
  delete_translations_item(id: ID!): delete_one
  delete_roles_items(ids: [ID]!): delete_many
  delete_roles_item(id: ID!): delete_one
  delete_shares_items(ids: [ID]!): delete_many
  delete_shares_item(id: ID!): delete_one
  delete_users_items(ids: [ID]!): delete_many
  delete_users_item(id: ID!): delete_one
}

type Subscription {
  app_elements_mutated(event: EventEnum): app_elements_mutated
  app_settings_mutated(event: EventEnum): app_settings_mutated
  app_settings_housing_translations_mutated(event: EventEnum): app_settings_housing_translations_mutated
  app_settings_login_screen_translations_mutated(event: EventEnum): app_settings_login_screen_translations_mutated
  buildings_attributes_mutated(event: EventEnum): buildings_attributes_mutated
  buildings_businesshours_mutated(event: EventEnum): buildings_businesshours_mutated
  auto_translation_settings_mutated(event: EventEnum): auto_translation_settings_mutated
  app_feedbacks_mutated(event: EventEnum): app_feedbacks_mutated
  businesshours_groups_mutated(event: EventEnum): businesshours_groups_mutated
  businesshours_groups_translations_mutated(event: EventEnum): businesshours_groups_translations_mutated
  canteen_food_feedback_report_schedules_canteens_mutated(event: EventEnum): canteen_food_feedback_report_schedules_canteens_mutated
  businesshours_mutated(event: EventEnum): businesshours_mutated
  buildings_translations_mutated(event: EventEnum): buildings_translations_mutated
  canteen_food_feedback_report_schedules_mutated(event: EventEnum): canteen_food_feedback_report_schedules_mutated
  canteen_food_feedback_report_schedules_report_recipients_mutated(event: EventEnum): canteen_food_feedback_report_schedules_report_recipients_mutated
  canteens_feedbacks_labels_translations_mutated(event: EventEnum): canteens_feedbacks_labels_translations_mutated
  canteens_foodservice_hours_mutated(event: EventEnum): canteens_foodservice_hours_mutated
  cashregisters_transactions_mutated(event: EventEnum): cashregisters_transactions_mutated
  collectible_events_mutated(event: EventEnum): collectible_events_mutated
  collectible_events_translations_mutated(event: EventEnum): collectible_events_translations_mutated
  collections_dates_last_update_mutated(event: EventEnum): collections_dates_last_update_mutated
  devices_mutated(event: EventEnum): devices_mutated
  directus_access_mutated(event: EventEnum): directus_access_mutated
  directus_activity_mutated(event: EventEnum): directus_activity_mutated
  canteens_feedbacks_labels_entries_mutated(event: EventEnum): canteens_feedbacks_labels_entries_mutated
  canteens_feedbacks_labels_mutated(event: EventEnum): canteens_feedbacks_labels_mutated
  canteens_foodservice_hours_during_semester_break_mutated(event: EventEnum): canteens_foodservice_hours_during_semester_break_mutated
  cashregisters_mutated(event: EventEnum): cashregisters_mutated
  directus_comments_mutated(event: EventEnum): directus_comments_mutated
  directus_dashboards_mutated(event: EventEnum): directus_dashboards_mutated
  directus_folders_mutated(event: EventEnum): directus_folders_mutated
  directus_policies_mutated(event: EventEnum): directus_policies_mutated
  directus_notifications_mutated(event: EventEnum): directus_notifications_mutated
  directus_operations_mutated(event: EventEnum): directus_operations_mutated
  directus_panels_mutated(event: EventEnum): directus_panels_mutated
  directus_permissions_mutated(event: EventEnum): directus_permissions_mutated
  directus_files_mutated(event: EventEnum): directus_files_mutated
  directus_flows_mutated(event: EventEnum): directus_flows_mutated
  directus_versions_mutated(event: EventEnum): directus_versions_mutated
  directus_presets_mutated(event: EventEnum): directus_presets_mutated
  directus_settings_mutated(event: EventEnum): directus_settings_mutated
  directus_webhooks_mutated(event: EventEnum): directus_webhooks_mutated
  files_shares_mutated(event: EventEnum): files_shares_mutated
  directus_sync_id_map_mutated(event: EventEnum): directus_sync_id_map_mutated
  directus_translations_mutated(event: EventEnum): directus_translations_mutated
  directus_roles_mutated(event: EventEnum): directus_roles_mutated
  directus_shares_mutated(event: EventEnum): directus_shares_mutated
  directus_users_mutated(event: EventEnum): directus_users_mutated
  directus_revisions_mutated(event: EventEnum): directus_revisions_mutated
  foods_mutated(event: EventEnum): foods_mutated
  foodoffers_markings_mutated(event: EventEnum): foodoffers_markings_mutated
  foods_attributes_groups_mutated(event: EventEnum): foods_attributes_groups_mutated
  foods_attributes_groups_translations_mutated(event: EventEnum): foods_attributes_groups_translations_mutated
  foods_attributes_translations_mutated(event: EventEnum): foods_attributes_translations_mutated
  foods_attributes_values_mutated(event: EventEnum): foods_attributes_values_mutated
  foods_categories_mutated(event: EventEnum): foods_categories_mutated
  foods_categories_translations_mutated(event: EventEnum): foods_categories_translations_mutated
  foods_feedbacks_mutated(event: EventEnum): foods_feedbacks_mutated
  foods_feedbacks_foods_feedbacks_labels_mutated(event: EventEnum): foods_feedbacks_foods_feedbacks_labels_mutated
  foodoffers_mutated(event: EventEnum): foodoffers_mutated
  foodoffers_categories_mutated(event: EventEnum): foodoffers_categories_mutated
  foods_attributes_mutated(event: EventEnum): foods_attributes_mutated
  foods_feedbacks_labels_translations_mutated(event: EventEnum): foods_feedbacks_labels_translations_mutated
  foods_markings_mutated(event: EventEnum): foods_markings_mutated
  form_answers_files_mutated(event: EventEnum): form_answers_files_mutated
  form_fields_mutated(event: EventEnum): form_fields_mutated
  form_extracts_mutated(event: EventEnum): form_extracts_mutated
  form_extracts_form_fields_mutated(event: EventEnum): form_extracts_form_fields_mutated
  forms_mutated(event: EventEnum): forms_mutated
  form_submissions_mutated(event: EventEnum): form_submissions_mutated
  form_categories_mutated(event: EventEnum): form_categories_mutated
  form_fields_translations_mutated(event: EventEnum): form_fields_translations_mutated
  foods_feedbacks_labels_mutated(event: EventEnum): foods_feedbacks_labels_mutated
  foods_feedbacks_labels_entries_mutated(event: EventEnum): foods_feedbacks_labels_entries_mutated
  foods_translations_mutated(event: EventEnum): foods_translations_mutated
  form_answers_mutated(event: EventEnum): form_answers_mutated
  markings_mutated(event: EventEnum): markings_mutated
  markings_exclusions_mutated(event: EventEnum): markings_exclusions_mutated
  forms_translations_mutated(event: EventEnum): forms_translations_mutated
  markings_groups_translations_mutated(event: EventEnum): markings_groups_translations_mutated
  markings_translations_mutated(event: EventEnum): markings_translations_mutated
  news_mutated(event: EventEnum): news_mutated
  news_translations_mutated(event: EventEnum): news_translations_mutated
  popup_events_canteens_mutated(event: EventEnum): popup_events_canteens_mutated
  popup_events_translations_mutated(event: EventEnum): popup_events_translations_mutated
  languages_mutated(event: EventEnum): languages_mutated
  mails_files_mutated(event: EventEnum): mails_files_mutated
  mails_mutated(event: EventEnum): mails_mutated
  markings_groups_mutated(event: EventEnum): markings_groups_mutated
  popup_events_mutated(event: EventEnum): popup_events_mutated
  utilizations_entries_mutated(event: EventEnum): utilizations_entries_mutated
  utilizations_groups_mutated(event: EventEnum): utilizations_groups_mutated
  profiles_buildings_favorites_mutated(event: EventEnum): profiles_buildings_favorites_mutated
  washingmachines_jobs_mutated(event: EventEnum): washingmachines_jobs_mutated
  wikis_translations_mutated(event: EventEnum): wikis_translations_mutated
  workflows_runs_mutated(event: EventEnum): workflows_runs_mutated
  workflows_mutated(event: EventEnum): workflows_mutated
  report_recipients_mutated(event: EventEnum): report_recipients_mutated
  profiles_buildings_last_opened_mutated(event: EventEnum): profiles_buildings_last_opened_mutated
  profiles_markings_mutated(event: EventEnum): profiles_markings_mutated
  push_notifications_mutated(event: EventEnum): push_notifications_mutated
  washingmachines_mutated(event: EventEnum): washingmachines_mutated
  wikis_directus_roles_mutated(event: EventEnum): wikis_directus_roles_mutated
  wikis_mutated(event: EventEnum): wikis_mutated
  buildings_mutated(event: EventEnum): buildings_mutated
  apartments_mutated(event: EventEnum): apartments_mutated
  app_elements_translations_mutated(event: EventEnum): app_elements_translations_mutated
  profiles_mutated(event: EventEnum): profiles_mutated
  app_settings_balance_translations_mutated(event: EventEnum): app_settings_balance_translations_mutated
  canteens_mutated(event: EventEnum): canteens_mutated
  collectible_event_participants_mutated(event: EventEnum): collectible_event_participants_mutated
  foodoffers_categories_translations_mutated(event: EventEnum): foodoffers_categories_translations_mutated
  form_categories_translations_mutated(event: EventEnum): form_categories_translations_mutated
}

"""The `Boolean` scalar type represents `true` or `false`."""
scalar Boolean

"""ISO8601 Date values"""
scalar Date

"""
The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).
"""
scalar Float

"""BigInt value"""
scalar GraphQLBigInt

"""A Float or a String"""
scalar GraphQLStringOrFloat

"""Hashed string values"""
scalar Hash

"""
The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.
"""
scalar ID

"""
The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
"""
scalar Int

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

scalar permissions_me_type

"""
The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
"""
scalar String

"""Represents NULL values"""
scalar Void

enum auth_mode {
  json
  cookie
  session
}

enum EventEnum {
  create
  update
  delete
}

enum graphql_sdl_scope {
  items
  system
}

type apartments {
  handicapped_accessible: Boolean
  singleflat: Boolean
  family_friendly: Boolean
  sort: Int
  status: String
  external_identifier: String
  available_from: Date
  available_from_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  building(filter: buildings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): buildings
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  washingmachines(filter: washingmachines_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [washingmachines]
  washingmachines_func: count_functions
}

type apartments_mutated {
  key: ID!
  event: EventEnum
  data: apartments
}

type app_elements {
  sort: Int
  color: String
  status: String
  date_updated: Date
  date_updated_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  date_created: Date
  date_created_func: datetime_functions
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  translations(filter: app_elements_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [app_elements_translations]
  translations_func: count_functions
}

type app_elements_mutated {
  key: ID!
  event: EventEnum
  data: app_elements
}

type app_elements_translations {
  id: ID!
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  content: String
  popup_content: String
  popup_button_text: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  app_elements_id(filter: app_elements_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): app_elements
}

type app_elements_translations_mutated {
  key: ID!
  event: EventEnum
  data: app_elements_translations
}

type app_feedbacks {
  feedback_read_by_support: Boolean
  response_read_by_user: Boolean
  positive: Boolean
  sort: Int
  priority: Int
  response: String
  content: String
  display_width: Float
  display_scale: Float
  display_pixelratio: Float
  display_fontscale: Float
  display_height: Float
  title: String
  status: String
  device_system_version: String
  device_platform: String
  device_brand: String
  contact_email: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  profile(filter: profiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): profiles
  user_created: String
}

type app_feedbacks_mutated {
  key: ID!
  event: EventEnum
  data: app_feedbacks
}

type app_settings {
  """Zeige in der App den Bereich Campus an"""
  campus_enabled: Boolean

  """Zeige die Auslastungsprognose in der App"""
  utilization_display_enabled: Boolean
  course_timetable_enabled: Boolean
  balance_enabled: Boolean

  """Zeigt in der App den Bereich News an"""
  news_enabled: Boolean

  """Zeige den Lageplan in der App an"""
  map_enabled: Boolean

  """Zeigt den Bereich Wohnen in der App an"""
  housing_enabled: Boolean

  """Bereich "Mensa" in der App aktivieren?"""
  foods_enabled: Boolean

  """Soll die durschnittliche Bewertung der Speisen angezeigt werden?"""
  foods_ratings_average_display: Boolean

  """Soll die Anzahl der Bewertungen angezeigt werden?"""
  foods_ratings_amount_display: Boolean
  animations_auto_start: Boolean
  notifications_ios_enabled: Boolean
  notifications_email_enabled: Boolean
  notifications_android_enabled: Boolean
  id: ID!

  """Liste erlaubter Seiten die sich bei der App Anmelden dürfen"""
  redirect_whitelist: JSON
  redirect_whitelist_func: count_functions
  course_timetable_area_color: String
  balance_area_color: String
  campus_area_color: String
  news_area_color: String
  housing_area_color: String
  foods_area_color: String
  status: String

  """Wie sollen die Bewertungen angezeigt werden? Sterne, Daumen, ..."""
  foods_ratings_type: String
  foods_placeholder_image_thumb_hash: String
  foods_placeholder_image_remote_url: String
  foods_feedbacks_labels_type: String

  """
  URL zu einem externen Forum für Rückmeldungen und Bewertungen von Speisen
  """
  foods_feedbacks_custom_url: String
  foods_feedbacks_comments_type: String

  """Wer ist für die Inhalte der Speiseangebote verantwortlich?"""
  food_responsible_organization_name: String

  """URL bzw. Link zu der verantwortlichen Stelle"""
  food_responsible_organization_link: String
  app_stores_url_to_google: String
  app_stores_url_to_apple: String
  date_privacy_policy_updated: Date
  date_privacy_policy_updated_func: datetime_functions
  maintenance_start: Date
  maintenance_start_func: datetime_functions
  maintenance_end: Date
  maintenance_end_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  news_before_element(filter: app_elements_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): app_elements
  company_image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  placeholder_image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  foodoffers_list_before_element(filter: app_elements_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): app_elements
  foodoffers_list_after_element(filter: app_elements_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): app_elements
  housing_before_element(filter: app_elements_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): app_elements
  campus_before_element(filter: app_elements_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): app_elements
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  foods_placeholder_image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  balance_translations(filter: app_settings_balance_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [app_settings_balance_translations]
  balance_translations_func: count_functions
  login_screen_translations(filter: app_settings_login_screen_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [app_settings_login_screen_translations]
  login_screen_translations_func: count_functions
  housing_translations(filter: app_settings_housing_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [app_settings_housing_translations]
  housing_translations_func: count_functions
}

type app_settings_balance_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  app_settings_id(filter: app_settings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): app_settings
  id: ID!
  content: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
}

type app_settings_balance_translations_mutated {
  key: ID!
  event: EventEnum
  data: app_settings_balance_translations
}

type app_settings_housing_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID!
  app_settings_id(filter: app_settings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): app_settings
  content: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
}

type app_settings_housing_translations_mutated {
  key: ID!
  event: EventEnum
  data: app_settings_housing_translations
}

type app_settings_login_screen_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  app_settings_id(filter: app_settings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): app_settings
  id: ID!
  detailed_description: String
  intro_description: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
}

type app_settings_login_screen_translations_mutated {
  key: ID!
  event: EventEnum
  data: app_settings_login_screen_translations
}

type app_settings_mutated {
  key: ID!
  event: EventEnum
  data: app_settings
}

type auth_tokens {
  access_token: String
  expires: GraphQLBigInt
  refresh_token: String
}

type auto_translation_settings {
  valid_auth_key: Boolean
  active: Boolean
  used: Int
  percentage: Int
  limit: Int
  id: ID!

  """Informations about errors will be shown here."""
  informations: String

  """Informations about errors will be shown here."""
  extra: String

  """
  Authentication - You need an authentication key to access to the API. https://www.deepl.com/de/your-account/keys
  """
  auth_key: String
}

type auto_translation_settings_mutated {
  key: ID!
  event: EventEnum
  data: auto_translation_settings
}

type buildings {
  sort: Int
  coordinates: JSON
  coordinates_func: count_functions
  url: String
  status: String
  image_thumb_hash: String
  image_remote_url: String
  external_identifier: String
  alias: String
  date_of_construction: Date
  date_of_construction_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  id: ID!
  translations(filter: buildings_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [buildings_translations]
  translations_func: count_functions
  apartments(filter: apartments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [apartments]
  apartments_func: count_functions
  businesshours(filter: buildings_businesshours_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [buildings_businesshours]
  businesshours_func: count_functions
}

type buildings_attributes {
  sort: Int
  status: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type buildings_attributes_mutated {
  key: ID!
  event: EventEnum
  data: buildings_attributes
}

type buildings_businesshours {
  id: ID!
  buildings_id(filter: buildings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): buildings
  businesshours_id(filter: businesshours_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): businesshours
}

type buildings_businesshours_mutated {
  key: ID!
  event: EventEnum
  data: buildings_businesshours
}

type buildings_mutated {
  key: ID!
  event: EventEnum
  data: buildings
}

type buildings_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID!
  content: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  buildings_id(filter: buildings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): buildings
}

type buildings_translations_mutated {
  key: ID!
  event: EventEnum
  data: buildings_translations
}

type businesshours {
  wednesday: Boolean
  tuesday: Boolean
  thursday: Boolean
  sunday: Boolean
  saturday: Boolean
  monday: Boolean
  friday: Boolean
  sort: Int
  status: String
  time_start: Date
  time_start_func: time_functions
  time_end: Date
  time_end_func: time_functions

  """Leave empty to use default; overridden by other defined ranges."""
  date_valid_from: Date
  date_valid_from_func: date_functions

  """Leave empty to use default; overridden by other defined ranges."""
  date_valid_till: Date
  date_valid_till_func: date_functions
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  group(filter: businesshours_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): businesshours_groups
}

type businesshours_groups {
  sort: Int
  alias: String
  status: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  translations(filter: businesshours_groups_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [businesshours_groups_translations]
  translations_func: count_functions
}

type businesshours_groups_mutated {
  key: ID!
  event: EventEnum
  data: businesshours_groups
}

type businesshours_groups_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID!
  name: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  businesshours_groups_id(filter: businesshours_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): businesshours_groups
}

type businesshours_groups_translations_mutated {
  key: ID!
  event: EventEnum
  data: businesshours_groups_translations
}

type businesshours_mutated {
  key: ID!
  event: EventEnum
  data: businesshours
}

type canteen_food_feedback_report_schedules {
  """Zeige Speise Label Rückmeldungen insgesammt"""
  show_food_feedback_labels_for_all_time: Boolean

  """Zeige Mensa Rückmeldungen insgesammt"""
  show_canteen_feedbacks_for_all_time: Boolean

  """Zeige Mensa Rückmeldungen für Ausgewählten Zeitraum"""
  show_canteen_feedbacks_for_selected_period: Boolean

  """Zeige Rückmeldungen zu den Mensen pro Mensa: Labels"""
  show_canteen_feedbacks_also_per_canteen: Boolean
  report_send_successfully: Boolean
  send_on_sundays: Boolean
  send_on_saturdays: Boolean
  send_on_fridays: Boolean
  send_on_thursdays: Boolean
  send_on_wednesdays: Boolean
  send_on_tuesdays: Boolean
  send_on_mondays: Boolean

  """Zeige Bilder der Speisen"""
  show_images: Boolean
  enabled: Boolean

  """Zeige Speise Kommentare insgesammt"""
  show_food_comments_for_all_time: Boolean

  """Zeige Speise Kommentare für den gewählten Zeitraum"""
  show_food_comments_for_selected_period: Boolean

  """Zeige Speise Label Rückmeldungen für den gewählten Zeitraum"""
  show_food_feedback_labels_for_selected_period: Boolean
  sort: Int

  """
  Anzahl der Tage, um den der Referenztag verschoben wird. Positive Werte verschieben den Referenztag in die Zukunft, negative in die Vergangenheit.
  """
  period_days_offset: Int

  """
  Anzahl der vorherigen Tage fest, die im Bericht enthalten sein sollen, einschließlich des Referenztags. Wenn 1 gesetzt ist, wird nur der Referenztag im Bericht berücksichtigt. Der Referenztag kann durch den Offset verschoben werden.
  """
  period_days_amount: Int
  report_status_log: String
  alias: String
  status: String
  date_next_report_is_due: Date
  date_next_report_is_due_func: datetime_functions
  send_report_at_hh_mm: Date
  send_report_at_hh_mm_func: time_functions

  """Bericht einmalig senden, als wäre es Tag X"""
  send_once_now_for_reference_date: Date
  send_once_now_for_reference_date_func: date_functions
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  canteens(filter: canteen_food_feedback_report_schedules_canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [canteen_food_feedback_report_schedules_canteens]
  canteens_func: count_functions
  recipients(filter: canteen_food_feedback_report_schedules_report_recipients_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [canteen_food_feedback_report_schedules_report_recipients]
  recipients_func: count_functions
}

type canteen_food_feedback_report_schedules_canteens {
  id: ID!
  canteen_food_feedback_report_schedules_id(filter: canteen_food_feedback_report_schedules_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteen_food_feedback_report_schedules
  canteens_id(filter: canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteens
}

type canteen_food_feedback_report_schedules_canteens_mutated {
  key: ID!
  event: EventEnum
  data: canteen_food_feedback_report_schedules_canteens
}

type canteen_food_feedback_report_schedules_mutated {
  key: ID!
  event: EventEnum
  data: canteen_food_feedback_report_schedules
}

type canteen_food_feedback_report_schedules_report_recipients {
  id: ID!
  canteen_food_feedback_report_schedules_id(filter: canteen_food_feedback_report_schedules_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteen_food_feedback_report_schedules
  report_recipients_id(filter: report_recipients_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): report_recipients
}

type canteen_food_feedback_report_schedules_report_recipients_mutated {
  key: ID!
  event: EventEnum
  data: canteen_food_feedback_report_schedules_report_recipients
}

type canteens {
  """
  Beim Importieren von Speiseangeboten werden alle statischen Speiseangebote gelöscht, also die ohne Datum.
  """
  foodoffers_import_delete_all_without_dates: Boolean

  """
  Beim Importieren von Speiseangeboten sind die Angebote für alle Tage gültig und haben daher kein Datum.
  """
  foodoffers_import_without_date: Boolean
  sort: Int
  alias: String
  status: String
  external_identifier: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  id: ID!
  building(filter: buildings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): buildings
  utilization_group(filter: utilizations_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): utilizations_groups
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type canteens_feedbacks_labels {
  sort: Int
  image_thumb_hash: String
  image_remote_url: String

  """Icon from: https://icons.expo.fyi/Index"""
  icon: String
  alias: String
  status: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  translations(filter: canteens_feedbacks_labels_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [canteens_feedbacks_labels_translations]
  translations_func: count_functions
}

type canteens_feedbacks_labels_entries {
  dislike: Boolean
  like: Boolean
  sort: Int
  status: String
  date: Date
  date_func: date_functions
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  profile(filter: profiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): profiles
  canteen(filter: canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteens
  label(filter: canteens_feedbacks_labels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteens_feedbacks_labels
  id: ID!
}

type canteens_feedbacks_labels_entries_mutated {
  key: ID!
  event: EventEnum
  data: canteens_feedbacks_labels_entries
}

type canteens_feedbacks_labels_mutated {
  key: ID!
  event: EventEnum
  data: canteens_feedbacks_labels
}

type canteens_feedbacks_labels_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID!
  text: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  canteens_feedbacks_labels_id(filter: canteens_feedbacks_labels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteens_feedbacks_labels
}

type canteens_feedbacks_labels_translations_mutated {
  key: ID!
  event: EventEnum
  data: canteens_feedbacks_labels_translations
}

type canteens_foodservice_hours {
  id: ID!
  businesshours_id(filter: businesshours_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): businesshours
  canteens_id(filter: canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteens
}

type canteens_foodservice_hours_during_semester_break {
  id: ID!
  businesshours_id(filter: businesshours_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): businesshours
  canteens_id(filter: canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteens
}

type canteens_foodservice_hours_during_semester_break_mutated {
  key: ID!
  event: EventEnum
  data: canteens_foodservice_hours_during_semester_break
}

type canteens_foodservice_hours_mutated {
  key: ID!
  event: EventEnum
  data: canteens_foodservice_hours
}

type canteens_mutated {
  key: ID!
  event: EventEnum
  data: canteens
}

type cashregisters {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  canteen(filter: canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteens
  transactions(filter: cashregisters_transactions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [cashregisters_transactions]
  transactions_func: count_functions
}

type cashregisters_mutated {
  key: ID!
  event: EventEnum
  data: cashregisters
}

type cashregisters_transactions {
  weekday_index_calculated: Int
  sort: Int
  quantity: Float
  status: String
  name: String
  id: ID!
  date: Date
  date_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  cashregister(filter: cashregisters_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): cashregisters
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type cashregisters_transactions_mutated {
  key: ID!
  event: EventEnum
  data: cashregisters_transactions
}

type collectible_event_participants {
  sort: Int
  date_created: Date
  date_created_func: datetime_functions
  points: String
  phone_number: String
  email: String
  status: String
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  profile(filter: profiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): profiles
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  collectible_event(filter: collectible_events_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): collectible_events
}

type collectible_event_participants_mutated {
  key: ID!
  event: EventEnum
  data: collectible_event_participants
}

type collectible_events {
  monitor_display_number_of_participants: Boolean
  monitor_display_number_of_collected_items: Boolean
  sort: Int
  points_maximum: String
  points_minimum: String
  alias: String
  status: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_start: Date
  date_start_func: datetime_functions
  date_end: Date
  date_end_func: datetime_functions
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  collectible_image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  monitor_background_image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  participants(filter: collectible_event_participants_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [collectible_event_participants]
  participants_func: count_functions
  translations(filter: collectible_events_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [collectible_events_translations]
  translations_func: count_functions
}

type collectible_events_mutated {
  key: ID!
  event: EventEnum
  data: collectible_events
}

type collectible_events_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID!
  description: String
  title: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  collectible_events_id(filter: collectible_events_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): collectible_events
}

type collectible_events_translations_mutated {
  key: ID!
  event: EventEnum
  data: collectible_events_translations
}

type collections_dates_last_update {
  sort: Int
  status: String
  id: ID!
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type collections_dates_last_update_mutated {
  key: ID!
  event: EventEnum
  data: collections_dates_last_update
}

type count_functions {
  count: Int
}

type date_functions {
  year: Int
  month: Int
  week: Int
  day: Int
  weekday: Int
}

type datetime_functions {
  year: Int
  month: Int
  week: Int
  day: Int
  weekday: Int
  hour: Int
  minute: Int
  second: Int
}

type delete_collection {
  collection: String
}

type delete_field {
  collection: String
  field: String
}

type delete_many {
  ids: [ID]!
}

type delete_one {
  id: ID!
}

type delete_relation {
  collection: String
  field: String
}

type devices {
  is_simulator: Boolean
  is_tablet: Boolean
  is_web: Boolean
  is_android: Boolean
  is_ios: Boolean
  is_landscape: Boolean
  sort: Int
  display_scale: Float
  display_pixelratio: Float
  display_height: Float
  display_fontscale: Float
  pushTokenObj: JSON
  pushTokenObj_func: count_functions
  display_width: Float
  system_version: String
  status: String
  platform: String
  brand: String
  alias: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  profile(filter: profiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): profiles
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type devices_mutated {
  key: ID!
  event: EventEnum
  data: devices
}

type directus_access {
  sort: Int
  id: ID!
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  user(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  policy(filter: directus_policies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_policies
}

type directus_access_aggregated {
  group: JSON
  countAll: Int
  count: directus_access_aggregated_count
  countDistinct: directus_access_aggregated_count
  avg: directus_access_aggregated_fields
  sum: directus_access_aggregated_fields
  avgDistinct: directus_access_aggregated_fields
  sumDistinct: directus_access_aggregated_fields
  min: directus_access_aggregated_fields
  max: directus_access_aggregated_fields
}

type directus_access_aggregated_count {
  sort: Int
  id: Int
  role: Int
  user: Int
  policy: Int
}

type directus_access_aggregated_fields {
  sort: Float
}

type directus_access_mutated {
  key: ID!
  event: EventEnum
  data: directus_access
}

type directus_activity {
  id: ID!
  user_agent: String
  origin: String
  item: String!
  collection: String!
  ip: String
  action: String!
  timestamp: Date
  timestamp_func: datetime_functions
  user(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  revisions(filter: directus_revisions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_revisions]
  revisions_func: count_functions
}

type directus_activity_aggregated {
  group: JSON
  countAll: Int
  count: directus_activity_aggregated_count
  countDistinct: directus_activity_aggregated_count
  avg: directus_activity_aggregated_fields
  sum: directus_activity_aggregated_fields
  avgDistinct: directus_activity_aggregated_fields
  sumDistinct: directus_activity_aggregated_fields
  min: directus_activity_aggregated_fields
  max: directus_activity_aggregated_fields
}

type directus_activity_aggregated_count {
  id: Int
  user_agent: Int
  origin: Int
  item: Int
  collection: Int
  ip: Int
  action: Int
  timestamp: Int
  user: Int
  revisions: Int
}

type directus_activity_aggregated_fields {
  id: Float
}

type directus_activity_mutated {
  key: ID!
  event: EventEnum
  data: directus_activity
}

type directus_collections {
  collection: String
  meta: directus_collections_meta
  schema: directus_collections_schema
}

type directus_collections_meta {
  archive_app_filter: Boolean!
  versioning: Boolean!
  hidden: Boolean!
  sort: Int
  singleton: Boolean!
  note: String
  translations: JSON
  item_duplication_fields: JSON
  preview_url: String
  collapse: String!
  group: String
  color: String
  accountability: String
  sort_field: String
  unarchive_value: String
  archive_value: String
  archive_field: String
  display_template: String
  icon: String
  collection: String!
}

type directus_collections_schema {
  name: String
  comment: String
}

type directus_comments {
  comment: String!
  item: String!
  collection: String!
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_comments_aggregated {
  group: JSON
  countAll: Int
  count: directus_comments_aggregated_count
  countDistinct: directus_comments_aggregated_count
}

type directus_comments_aggregated_count {
  comment: Int
  item: Int
  collection: Int
  date_created: Int
  date_updated: Int
  id: Int
  user_created: Int
  user_updated: Int
}

type directus_comments_mutated {
  key: ID!
  event: EventEnum
  data: directus_comments
}

type directus_dashboards {
  note: String
  color: String
  icon: String
  name: String!
  date_created: Date
  date_created_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  panels(filter: directus_panels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_panels]
  panels_func: count_functions
}

type directus_dashboards_aggregated {
  group: JSON
  countAll: Int
  count: directus_dashboards_aggregated_count
  countDistinct: directus_dashboards_aggregated_count
}

type directus_dashboards_aggregated_count {
  note: Int
  color: Int
  icon: Int
  name: Int
  date_created: Int
  user_created: Int
  id: Int
  panels: Int
}

type directus_dashboards_mutated {
  key: ID!
  event: EventEnum
  data: directus_dashboards
}

type directus_extensions {
  bundle: String
  name: String!
  schema: directus_extensions_schema
  meta: directus_extensions_meta
}

type directus_extensions_meta {
  enabled: Boolean
}

type directus_extensions_schema {
  type: String
  local: Boolean
}

type directus_fields {
  collection: String
  field: String
  type: String
  meta: directus_fields_meta
  schema: directus_fields_schema
}

type directus_fields_meta {
  hidden: Boolean!
  required: Boolean
  readonly: Boolean!
  sort: Int
  id: Int!
  display_options: JSON
  options: JSON
  validation_message: String
  note: String
  translations: JSON
  validation: JSON
  conditions: JSON
  group: String
  width: String
  display: String
  interface: String
  special: [String]
  field: String!
  collection: String!
}

type directus_fields_schema {
  name: String
  table: String
  data_type: String
  default_value: String
  max_length: Int
  numeric_precision: Int
  numeric_scale: Int
  is_generated: Boolean
  generation_expression: String
  is_indexed: Boolean
  is_nullable: Boolean
  is_unique: Boolean
  is_primary_key: Boolean
  has_auto_increment: Boolean
  foreign_key_column: String
  foreign_key_table: String
  comment: String
}

type directus_files {
  is_unreferenced: Boolean
  focal_point_y: Int
  focal_point_x: Int
  duration: Int
  height: Int
  width: Int
  filesize: GraphQLBigInt
  description: String
  location: String
  tags: JSON
  tags_func: count_functions
  metadata: JSON
  metadata_func: count_functions
  tus_data: JSON
  tus_data_func: count_functions
  tus_id: String
  embed: String
  charset: String
  type: String
  title: String
  filename_download: String!
  filename_disk: String
  storage: String!
  created_on: Date
  created_on_func: datetime_functions
  modified_on: Date
  modified_on_func: datetime_functions
  uploaded_on: Date
  uploaded_on_func: datetime_functions
  id: ID!
  folder(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_folders
  uploaded_by(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  modified_by(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_files_aggregated {
  group: JSON
  countAll: Int
  count: directus_files_aggregated_count
  countDistinct: directus_files_aggregated_count
  avg: directus_files_aggregated_fields
  sum: directus_files_aggregated_fields
  avgDistinct: directus_files_aggregated_fields
  sumDistinct: directus_files_aggregated_fields
  min: directus_files_aggregated_fields
  max: directus_files_aggregated_fields
}

type directus_files_aggregated_count {
  is_unreferenced: Int
  focal_point_y: Int
  focal_point_x: Int
  duration: Int
  height: Int
  width: Int
  filesize: Int
  description: Int
  location: Int
  tags: Int
  metadata: Int
  tus_data: Int
  tus_id: Int
  embed: Int
  charset: Int
  type: Int
  title: Int
  filename_download: Int
  filename_disk: Int
  storage: Int
  created_on: Int
  modified_on: Int
  uploaded_on: Int
  id: Int
  folder: Int
  uploaded_by: Int
  modified_by: Int
}

type directus_files_aggregated_fields {
  focal_point_y: Float
  focal_point_x: Float
  duration: Float
  height: Float
  width: Float
  filesize: Float
}

type directus_files_mutated {
  key: ID!
  event: EventEnum
  data: directus_files
}

type directus_flows {
  description: String
  options: JSON
  options_func: count_functions
  accountability: String
  trigger: String
  status: String
  color: String
  icon: String
  name: String!
  date_created: Date
  date_created_func: datetime_functions
  id: ID!
  operation(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_operations
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  operations(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_operations]
  operations_func: count_functions
}

type directus_flows_aggregated {
  group: JSON
  countAll: Int
  count: directus_flows_aggregated_count
  countDistinct: directus_flows_aggregated_count
}

type directus_flows_aggregated_count {
  description: Int
  options: Int
  accountability: Int
  trigger: Int
  status: Int
  color: Int
  icon: Int
  name: Int
  date_created: Int
  id: Int
  operation: Int
  user_created: Int
  operations: Int
}

type directus_flows_mutated {
  key: ID!
  event: EventEnum
  data: directus_flows
}

type directus_folders {
  name: String!
  id: ID!
  parent(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_folders
}

type directus_folders_aggregated {
  group: JSON
  countAll: Int
  count: directus_folders_aggregated_count
  countDistinct: directus_folders_aggregated_count
}

type directus_folders_aggregated_count {
  name: Int
  id: Int
  parent: Int
}

type directus_folders_mutated {
  key: ID!
  event: EventEnum
  data: directus_folders
}

type directus_notifications {
  id: ID!
  message: String
  item: String
  collection: String
  subject: String!
  status: String
  timestamp: Date
  timestamp_func: datetime_functions
  recipient(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  sender(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_notifications_aggregated {
  group: JSON
  countAll: Int
  count: directus_notifications_aggregated_count
  countDistinct: directus_notifications_aggregated_count
  avg: directus_notifications_aggregated_fields
  sum: directus_notifications_aggregated_fields
  avgDistinct: directus_notifications_aggregated_fields
  sumDistinct: directus_notifications_aggregated_fields
  min: directus_notifications_aggregated_fields
  max: directus_notifications_aggregated_fields
}

type directus_notifications_aggregated_count {
  id: Int
  message: Int
  item: Int
  collection: Int
  subject: Int
  status: Int
  timestamp: Int
  recipient: Int
  sender: Int
}

type directus_notifications_aggregated_fields {
  id: Float
}

type directus_notifications_mutated {
  key: ID!
  event: EventEnum
  data: directus_notifications
}

type directus_operations {
  position_y: Int!
  position_x: Int!
  options: JSON
  options_func: count_functions
  type: String!
  key: String!
  name: String
  date_created: Date
  date_created_func: datetime_functions
  flow(filter: directus_flows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_flows
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  resolve(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_operations
  reject(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_operations
}

type directus_operations_aggregated {
  group: JSON
  countAll: Int
  count: directus_operations_aggregated_count
  countDistinct: directus_operations_aggregated_count
  avg: directus_operations_aggregated_fields
  sum: directus_operations_aggregated_fields
  avgDistinct: directus_operations_aggregated_fields
  sumDistinct: directus_operations_aggregated_fields
  min: directus_operations_aggregated_fields
  max: directus_operations_aggregated_fields
}

type directus_operations_aggregated_count {
  position_y: Int
  position_x: Int
  options: Int
  type: Int
  key: Int
  name: Int
  date_created: Int
  flow: Int
  user_created: Int
  id: Int
  resolve: Int
  reject: Int
}

type directus_operations_aggregated_fields {
  position_y: Float
  position_x: Float
}

type directus_operations_mutated {
  key: ID!
  event: EventEnum
  data: directus_operations
}

type directus_panels {
  show_header: Boolean!
  height: Int!
  width: Int!
  position_y: Int!
  position_x: Int!
  note: String
  options: JSON
  options_func: count_functions
  color: String
  icon: String
  name: String
  type: String!
  date_created: Date
  date_created_func: datetime_functions
  id: ID!
  dashboard(filter: directus_dashboards_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_dashboards
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_panels_aggregated {
  group: JSON
  countAll: Int
  count: directus_panels_aggregated_count
  countDistinct: directus_panels_aggregated_count
  avg: directus_panels_aggregated_fields
  sum: directus_panels_aggregated_fields
  avgDistinct: directus_panels_aggregated_fields
  sumDistinct: directus_panels_aggregated_fields
  min: directus_panels_aggregated_fields
  max: directus_panels_aggregated_fields
}

type directus_panels_aggregated_count {
  show_header: Int
  height: Int
  width: Int
  position_y: Int
  position_x: Int
  note: Int
  options: Int
  color: Int
  icon: Int
  name: Int
  type: Int
  date_created: Int
  id: Int
  dashboard: Int
  user_created: Int
}

type directus_panels_aggregated_fields {
  height: Float
  width: Float
  position_y: Float
  position_x: Float
}

type directus_panels_mutated {
  key: ID!
  event: EventEnum
  data: directus_panels
}

type directus_permissions {
  id: ID
  fields: [String]
  validation: JSON
  validation_func: count_functions
  presets: JSON
  presets_func: count_functions
  permissions: JSON
  permissions_func: count_functions
  action: String!
  collection: String!
  policy(filter: directus_policies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_policies
}

type directus_permissions_aggregated {
  group: JSON
  countAll: Int
  count: directus_permissions_aggregated_count
  countDistinct: directus_permissions_aggregated_count
  avg: directus_permissions_aggregated_fields
  sum: directus_permissions_aggregated_fields
  avgDistinct: directus_permissions_aggregated_fields
  sumDistinct: directus_permissions_aggregated_fields
  min: directus_permissions_aggregated_fields
  max: directus_permissions_aggregated_fields
}

type directus_permissions_aggregated_count {
  id: Int
  fields: Int
  validation: Int
  presets: Int
  permissions: Int
  action: Int
  collection: Int
  policy: Int
}

type directus_permissions_aggregated_fields {
  id: Float
}

type directus_permissions_mutated {
  key: ID!
  event: EventEnum
  data: directus_permissions
}

type directus_policies {
  """$t:field_options.directus_policies.enforce_tfa"""
  enforce_tfa: Boolean!
  admin_access: Boolean!
  app_access: Boolean!
  ip_access: [String]
  description: String
  icon: String
  name: String!
  id: ID!
  permissions(filter: directus_permissions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_permissions]
  permissions_func: count_functions
  users(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  users_func: count_functions
  roles(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  roles_func: count_functions
}

type directus_policies_aggregated {
  group: JSON
  countAll: Int
  count: directus_policies_aggregated_count
  countDistinct: directus_policies_aggregated_count
}

type directus_policies_aggregated_count {
  """$t:field_options.directus_policies.enforce_tfa"""
  enforce_tfa: Int
  admin_access: Int
  app_access: Int
  ip_access: Int
  description: Int
  icon: Int
  name: Int
  id: Int
  permissions: Int
  users: Int
  roles: Int
}

type directus_policies_mutated {
  key: ID!
  event: EventEnum
  data: directus_policies
}

type directus_presets {
  refresh_interval: Int
  id: ID!
  filter: JSON
  filter_func: count_functions
  layout_query: JSON
  layout_query_func: count_functions
  layout_options: JSON
  layout_options_func: count_functions
  color: String
  icon: String
  layout: String
  search: String
  collection: String
  bookmark: String
  user(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
}

type directus_presets_aggregated {
  group: JSON
  countAll: Int
  count: directus_presets_aggregated_count
  countDistinct: directus_presets_aggregated_count
  avg: directus_presets_aggregated_fields
  sum: directus_presets_aggregated_fields
  avgDistinct: directus_presets_aggregated_fields
  sumDistinct: directus_presets_aggregated_fields
  min: directus_presets_aggregated_fields
  max: directus_presets_aggregated_fields
}

type directus_presets_aggregated_count {
  refresh_interval: Int
  id: Int
  filter: Int
  layout_query: Int
  layout_options: Int
  color: Int
  icon: Int
  layout: Int
  search: Int
  collection: Int
  bookmark: Int
  user: Int
  role: Int
}

type directus_presets_aggregated_fields {
  refresh_interval: Float
  id: Float
}

type directus_presets_mutated {
  key: ID!
  event: EventEnum
  data: directus_presets
}

type directus_relations {
  collection: String
  field: String
  related_collection: String
  schema: directus_relations_schema
  meta: directus_relations_meta
}

type directus_relations_meta {
  id: Int
  one_allowed_collections: [String]
  one_deselect_action: String
  sort_field: String
  junction_field: String
  one_collection_field: String
  one_field: String
  one_collection: String
  many_field: String
  many_collection: String
}

type directus_relations_schema {
  table: String!
  column: String!
  foreign_key_table: String!
  foreign_key_column: String!
  constraint_name: String
  on_update: String!
  on_delete: String!
}

type directus_revisions {
  id: ID!
  activity(filter: directus_activity_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_activity
  parent(filter: directus_revisions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_revisions
  delta: JSON
  delta_func: count_functions
  data: JSON
  data_func: count_functions
  item: String!
  collection: String!
  version(filter: directus_versions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_versions
}

type directus_revisions_aggregated {
  group: JSON
  countAll: Int
  count: directus_revisions_aggregated_count
  countDistinct: directus_revisions_aggregated_count
  avg: directus_revisions_aggregated_fields
  sum: directus_revisions_aggregated_fields
  avgDistinct: directus_revisions_aggregated_fields
  sumDistinct: directus_revisions_aggregated_fields
  min: directus_revisions_aggregated_fields
  max: directus_revisions_aggregated_fields
}

type directus_revisions_aggregated_count {
  id: Int
  activity: Int
  parent: Int
  delta: Int
  data: Int
  item: Int
  collection: Int
  version: Int
}

type directus_revisions_aggregated_fields {
  id: Float
  activity: Float
  parent: Float
}

type directus_revisions_mutated {
  key: ID!
  event: EventEnum
  data: directus_revisions
}

type directus_roles {
  description: String
  icon: String
  name: String!
  id: ID!
  parent(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  children(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_roles]
  children_func: count_functions
  policies(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  policies_func: count_functions
  users(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_users]
  users_func: count_functions
}

type directus_roles_aggregated {
  group: JSON
  countAll: Int
  count: directus_roles_aggregated_count
  countDistinct: directus_roles_aggregated_count
}

type directus_roles_aggregated_count {
  description: Int
  icon: Int
  name: Int
  id: Int

  """$t:field_options.directus_roles.parent_note"""
  parent: Int

  """$t:field_options.directus_roles.children_note"""
  children: Int
  policies: Int
  users: Int
}

type directus_roles_mutated {
  key: ID!
  event: EventEnum
  data: directus_roles
}

type directus_settings {
  """$t:fields.directus_settings.public_registration_verify_email_note"""
  public_registration_verify_email: Boolean

  """$t:fields.directus_settings.public_registration_note"""
  public_registration: Boolean!
  auth_login_attempts: Int
  id: ID!
  public_note: String
  custom_css: String

  """$t:fields.directus_settings.public_registration_email_filter_note"""
  public_registration_email_filter: JSON
  public_registration_email_filter_func: count_functions
  custom_aspect_ratios: JSON
  custom_aspect_ratios_func: count_functions
  storage_asset_presets: JSON
  storage_asset_presets_func: count_functions
  basemaps: JSON
  basemaps_func: count_functions
  module_bar: JSON
  module_bar_func: count_functions
  theme_light_overrides: JSON
  theme_light_overrides_func: count_functions
  theme_dark_overrides: JSON
  theme_dark_overrides_func: count_functions
  report_feature_url: String
  report_bug_url: String
  report_error_url: String
  default_theme_dark: String
  default_theme_light: String
  default_appearance: String
  default_language: String
  project_descriptor: String
  mapbox_key: String
  storage_asset_transform: String
  auth_password_policy: String

  """$t:field_options.directus_settings.project_color_note"""
  project_color: String
  project_url: String
  project_name: String
  project_logo(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  public_foreground(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  public_background(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  storage_default_folder(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_folders
  public_favicon(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  public_registration_role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
}

type directus_settings_mutated {
  key: ID!
  event: EventEnum
  data: directus_settings
}

type directus_shares {
  """$t:shared_leave_blank_for_unlimited"""
  max_uses: Int
  times_used: Int

  """$t:shared_leave_blank_for_passwordless_access"""
  password: Hash
  item: String!
  collection: String!
  name: String
  date_created: Date
  date_created_func: datetime_functions

  """$t:shared_leave_blank_for_unlimited"""
  date_start: Date
  date_start_func: datetime_functions

  """$t:shared_leave_blank_for_unlimited"""
  date_end: Date
  date_end_func: datetime_functions
  id: ID!
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_shares_aggregated {
  group: JSON
  countAll: Int
  count: directus_shares_aggregated_count
  countDistinct: directus_shares_aggregated_count
  avg: directus_shares_aggregated_fields
  sum: directus_shares_aggregated_fields
  avgDistinct: directus_shares_aggregated_fields
  sumDistinct: directus_shares_aggregated_fields
  min: directus_shares_aggregated_fields
  max: directus_shares_aggregated_fields
}

type directus_shares_aggregated_count {
  """$t:shared_leave_blank_for_unlimited"""
  max_uses: Int
  times_used: Int

  """$t:shared_leave_blank_for_passwordless_access"""
  password: Int
  item: Int
  collection: Int
  name: Int
  date_created: Int

  """$t:shared_leave_blank_for_unlimited"""
  date_start: Int

  """$t:shared_leave_blank_for_unlimited"""
  date_end: Int
  id: Int
  role: Int
  user_created: Int
}

type directus_shares_aggregated_fields {
  """$t:shared_leave_blank_for_unlimited"""
  max_uses: Float
  times_used: Float
}

type directus_shares_mutated {
  key: ID!
  event: EventEnum
  data: directus_shares
}

type directus_sync_id_map {
  id: ID!
  local_id: String!
  sync_id: String!
  table: String!
  created_at: Date
  created_at_func: datetime_functions
}

type directus_sync_id_map_mutated {
  key: ID!
  event: EventEnum
  data: directus_sync_id_map
}

type directus_translations {
  value: String!
  key: String!
  language: String!
  id: ID!
}

type directus_translations_aggregated {
  group: JSON
  countAll: Int
  count: directus_translations_aggregated_count
  countDistinct: directus_translations_aggregated_count
}

type directus_translations_aggregated_count {
  value: Int
  key: Int
  language: Int
  id: Int
}

type directus_translations_mutated {
  key: ID!
  event: EventEnum
  data: directus_translations
}

type directus_users {
  email_notifications: Boolean
  description: String
  tags: JSON
  tags_func: count_functions
  auth_data: JSON
  auth_data_func: count_functions
  theme_dark_overrides: JSON
  theme_dark_overrides_func: count_functions
  theme_light_overrides: JSON
  theme_light_overrides_func: count_functions
  last_page: String
  token: Hash
  status: String
  tfa_secret: Hash
  language: String
  title: String
  location: String
  password: Hash
  email: String
  last_name: String
  first_name: String
  theme_light: String
  theme_dark: String
  appearance: String
  external_identifier: String
  provider: String
  last_access: Date
  last_access_func: datetime_functions
  profile(filter: profiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): profiles
  id: ID!
  avatar(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  policies(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  policies_func: count_functions
}

type directus_users_aggregated {
  group: JSON
  countAll: Int
  count: directus_users_aggregated_count
  countDistinct: directus_users_aggregated_count
}

type directus_users_aggregated_count {
  email_notifications: Int
  description: Int
  tags: Int
  auth_data: Int
  theme_dark_overrides: Int
  theme_light_overrides: Int
  last_page: Int
  token: Int
  status: Int
  tfa_secret: Int
  language: Int
  title: Int
  location: Int
  password: Int
  email: Int
  last_name: Int
  first_name: Int
  theme_light: Int
  theme_dark: Int
  appearance: Int
  external_identifier: Int
  provider: Int
  last_access: Int
  profile: Int
  id: Int
  avatar: Int
  role: Int
  policies: Int
}

type directus_users_mutated {
  key: ID!
  event: EventEnum
  data: directus_users
}

type directus_versions {
  delta: JSON
  delta_func: count_functions
  hash: String
  item: String!
  collection: String!
  name: String
  key: String!
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_versions_aggregated {
  group: JSON
  countAll: Int
  count: directus_versions_aggregated_count
  countDistinct: directus_versions_aggregated_count
}

type directus_versions_aggregated_count {
  delta: Int
  hash: Int
  item: Int
  collection: Int
  name: Int
  key: Int
  date_created: Int
  date_updated: Int
  id: Int
  user_created: Int
  user_updated: Int
}

type directus_versions_mutated {
  key: ID!
  event: EventEnum
  data: directus_versions
}

type directus_webhooks {
  was_active_before_deprecation: Boolean!
  data: Boolean
  id: ID!
  headers: JSON
  headers_func: count_functions
  collections: [String]!
  actions: [String]!
  status: String
  url: String!
  method: String
  name: String!
  migrated_flow(filter: directus_flows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_flows
}

type directus_webhooks_aggregated {
  group: JSON
  countAll: Int
  count: directus_webhooks_aggregated_count
  countDistinct: directus_webhooks_aggregated_count
  avg: directus_webhooks_aggregated_fields
  sum: directus_webhooks_aggregated_fields
  avgDistinct: directus_webhooks_aggregated_fields
  sumDistinct: directus_webhooks_aggregated_fields
  min: directus_webhooks_aggregated_fields
  max: directus_webhooks_aggregated_fields
}

type directus_webhooks_aggregated_count {
  was_active_before_deprecation: Int
  data: Int
  id: Int
  headers: Int
  collections: Int
  actions: Int
  status: Int
  url: Int
  method: Int
  name: Int
  migrated_flow: Int
}

type directus_webhooks_aggregated_fields {
  id: Float
}

type directus_webhooks_mutated {
  key: ID!
  event: EventEnum
  data: directus_webhooks
}

type files_shares {
  sort: Int
  status: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  date_exires_at: Date
  date_exires_at_func: datetime_functions
  file(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type files_shares_mutated {
  key: ID!
  event: EventEnum
  data: files_shares
}

type foodoffers {
  sort: Int
  price_student: Float
  price_guest: Float
  price_employee: Float
  redirect_url: String
  category: String
  status: String
  food(filter: foods_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods
  alias: String
  date: Date
  date_func: date_functions
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  foodoffer_category(filter: foodoffers_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foodoffers_categories
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  canteen(filter: canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteens
  markings(filter: foodoffers_markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foodoffers_markings]
  markings_func: count_functions
  attribute_values(filter: foods_attributes_values_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_attributes_values]
  attribute_values_func: count_functions
}

type foodoffers_categories {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  translations(filter: foodoffers_categories_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foodoffers_categories_translations]
  translations_func: count_functions
}

type foodoffers_categories_mutated {
  key: ID!
  event: EventEnum
  data: foodoffers_categories
}

type foodoffers_categories_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID!
  name: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  foodoffers_categories_id(filter: foodoffers_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foodoffers_categories
}

type foodoffers_categories_translations_mutated {
  key: ID!
  event: EventEnum
  data: foodoffers_categories_translations
}

type foodoffers_markings {
  id: ID!
  markings_id(filter: markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): markings
  foodoffers_id(filter: foodoffers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foodoffers
}

type foodoffers_markings_mutated {
  key: ID!
  event: EventEnum
  data: foodoffers_markings
}

type foodoffers_mutated {
  key: ID!
  event: EventEnum
  data: foodoffers
}

type foods {
  rating_amount: Int
  sort: Int
  rating_amount_legacy: Int
  rating_average_legacy: Float
  rating_average: Float
  status: String
  image_thumb_hash: String
  image_remote_url: String
  id: ID!
  extra: String
  category: String
  alias: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  food_category(filter: foods_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods_categories
  feedbacks(filter: foods_feedbacks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_feedbacks]
  feedbacks_func: count_functions
  markings(filter: foods_markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_markings]
  markings_func: count_functions
  translations(filter: foods_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_translations]
  translations_func: count_functions
  attribute_values(filter: foods_attributes_values_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_attributes_values]
  attribute_values_func: count_functions
}

type foods_attributes {
  show_on_card: Boolean
  show_on_label_list: Boolean
  full_width: Boolean
  sort: Int
  suffix: String
  prefix: String
  status: String
  image_thumb_hash: String
  image_remote_url: String

  """https://icons.expo.fyi/Index"""
  icon_expo: String
  external_identifier: String
  background_color: String
  alias: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  id: ID!
  group(filter: foods_attributes_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods_attributes_groups
  translations(filter: foods_attributes_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_attributes_translations]
  translations_func: count_functions
}

type foods_attributes_groups {
  sort: Int
  background_color: String
  image_thumb_hash: String
  image_remote_url: String
  icon_expo: String
  icon: String
  status: String
  alias: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  food_attributes(filter: foods_attributes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_attributes]
  food_attributes_func: count_functions
  translations(filter: foods_attributes_groups_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_attributes_groups_translations]
  translations_func: count_functions
}

type foods_attributes_groups_mutated {
  key: ID!
  event: EventEnum
  data: foods_attributes_groups
}

type foods_attributes_groups_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID!
  name: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  foods_attributes_groups_id(filter: foods_attributes_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods_attributes_groups
}

type foods_attributes_groups_translations_mutated {
  key: ID!
  event: EventEnum
  data: foods_attributes_groups_translations
}

type foods_attributes_mutated {
  key: ID!
  event: EventEnum
  data: foods_attributes
}

type foods_attributes_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID!
  description: String
  name: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  foods_attributes_id(filter: foods_attributes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods_attributes
}

type foods_attributes_translations_mutated {
  key: ID!
  event: EventEnum
  data: foods_attributes_translations
}

type foods_attributes_values {
  boolean_value: Boolean
  number_value: Float
  food_id(filter: foods_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods
  string_value: String
  icon_value: String
  color_value: String
  foodoffer_id(filter: foodoffers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foodoffers
  id: ID!
  food_attribute(filter: foods_attributes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods_attributes
}

type foods_attributes_values_mutated {
  key: ID!
  event: EventEnum
  data: foods_attributes_values
}

type foods_categories {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  translations(filter: foods_categories_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_categories_translations]
  translations_func: count_functions
}

type foods_categories_mutated {
  key: ID!
  event: EventEnum
  data: foods_categories
}

type foods_categories_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID!
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  name: String
  foods_categories_id(filter: foods_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods_categories
}

type foods_categories_translations_mutated {
  key: ID!
  event: EventEnum
  data: foods_categories_translations
}

type foods_feedbacks {
  notify: Boolean
  rating: Int
  sort: Int
  comment: String
  status: String
  food(filter: foods_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  profile(filter: profiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): profiles
  id: ID!
  foodoffer(filter: foodoffers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foodoffers
  canteen(filter: canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteens
}

type foods_feedbacks_foods_feedbacks_labels {
  dislike: Boolean
  id: ID!
  foods_feedbacks_labels_id(filter: foods_feedbacks_labels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods_feedbacks_labels
  foods_feedbacks_id(filter: foods_feedbacks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods_feedbacks
}

type foods_feedbacks_foods_feedbacks_labels_mutated {
  key: ID!
  event: EventEnum
  data: foods_feedbacks_foods_feedbacks_labels
}

type foods_feedbacks_labels {
  sort: Int
  status: String
  image_thumb_hash: String
  image_remote_url: String

  """Icon from: https://icons.expo.fyi/Index"""
  icon: String
  alias: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  id: ID!
  translations(filter: foods_feedbacks_labels_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_feedbacks_labels_translations]
  translations_func: count_functions
}

type foods_feedbacks_labels_entries {
  dislike: Boolean
  like: Boolean
  sort: Int
  status: String
  food(filter: foods_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  id: ID!
  foodoffer(filter: foodoffers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foodoffers
  canteen(filter: canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteens
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  profile(filter: profiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): profiles
  label(filter: foods_feedbacks_labels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods_feedbacks_labels
}

type foods_feedbacks_labels_entries_mutated {
  key: ID!
  event: EventEnum
  data: foods_feedbacks_labels_entries
}

type foods_feedbacks_labels_mutated {
  key: ID!
  event: EventEnum
  data: foods_feedbacks_labels
}

type foods_feedbacks_labels_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID!
  text: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  foods_feedbacks_labels_id(filter: foods_feedbacks_labels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods_feedbacks_labels
}

type foods_feedbacks_labels_translations_mutated {
  key: ID!
  event: EventEnum
  data: foods_feedbacks_labels_translations
}

type foods_feedbacks_mutated {
  key: ID!
  event: EventEnum
  data: foods_feedbacks
}

type foods_markings {
  id: ID!
  foods_id(filter: foods_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods
  markings_id(filter: markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): markings
}

type foods_markings_mutated {
  key: ID!
  event: EventEnum
  data: foods_markings
}

type foods_mutated {
  key: ID!
  event: EventEnum
  data: foods
}

type foods_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID!
  name: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  foods_id(filter: foods_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods
}

type foods_translations_mutated {
  key: ID!
  event: EventEnum
  data: foods_translations
}

type form_answers {
  value_boolean: Boolean
  sort: Int
  value_string: String
  value_number: Float
  value_custom: JSON
  value_custom_func: count_functions
  status: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  value_date: Date
  value_date_func: datetime_functions
  value_image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  form_field(filter: form_fields_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): form_fields
  form_submission(filter: form_submissions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): form_submissions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  value_files(filter: form_answers_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [form_answers_files]
  value_files_func: count_functions
}

type form_answers_files {
  id: ID!
  directus_files_id(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  form_answers_id(filter: form_answers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): form_answers
}

type form_answers_files_mutated {
  key: ID!
  event: EventEnum
  data: form_answers_files
}

type form_answers_mutated {
  key: ID!
  event: EventEnum
  data: form_answers
}

type form_categories {
  sort: Int

  """https://icons.expo.fyi/Index"""
  icon_expo: String
  alias: String
  status: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  translations(filter: form_categories_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [form_categories_translations]
  translations_func: count_functions
  forms(filter: forms_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [forms]
  forms_func: count_functions
}

type form_categories_mutated {
  key: ID!
  event: EventEnum
  data: form_categories
}

type form_categories_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID!
  name: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  form_categories_id(filter: form_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): form_categories
}

type form_categories_translations_mutated {
  key: ID!
  event: EventEnum
  data: form_categories_translations
}

type form_extracts {
  send_attachments_as_links: Boolean
  all_fields: Boolean
  sort: Int
  recipient_email_static: String
  alias: String
  internal_custom_id: String
  status: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  recipient_email_field(filter: form_fields_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): form_fields
  recipient_user(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  form(filter: forms_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): forms
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  fields(filter: form_extracts_form_fields_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [form_extracts_form_fields]
  fields_func: count_functions
}

type form_extracts_form_fields {
  id: ID!
  form_fields_id(filter: form_fields_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): form_fields
  form_extracts_id(filter: form_extracts_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): form_extracts
}

type form_extracts_form_fields_mutated {
  key: ID!
  event: EventEnum
  data: form_extracts_form_fields
}

type form_extracts_mutated {
  key: ID!
  event: EventEnum
  data: form_extracts
}

type form_fields {
  is_required: Boolean
  is_visible_in_form: Boolean
  is_disabled: Boolean
  is_visible_in_export: Boolean
  sort: Int
  external_export_id: String
  external_import_id: String
  field_type: String
  alias: String
  background_color: String
  image_thumb_hash: String
  image_remote_url: String

  """https://icons.expo.fyi/Index"""
  icon_expo: String
  icon: String
  status: String
  value_suffix: String
  value_prefix: String
  internal_custom_id: String
  external_export_field_name: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  form(filter: forms_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): forms
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  translations(filter: form_fields_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [form_fields_translations]
  translations_func: count_functions
}

type form_fields_mutated {
  key: ID!
  event: EventEnum
  data: form_fields
}

type form_fields_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID!
  description: String
  name: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  form_fields_id(filter: form_fields_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): form_fields
}

type form_fields_translations_mutated {
  key: ID!
  event: EventEnum
  data: form_fields_translations
}

type form_submissions {
  sort: Int
  internal_custom_id: String
  alias: String
  state: String
  status: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  date_submitted: Date
  date_submitted_func: datetime_functions
  date_started: Date
  date_started_func: datetime_functions
  date_locked_until: Date
  date_locked_until_func: datetime_functions
  user_locked_by(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  form(filter: forms_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): forms
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  form_answers(filter: form_answers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [form_answers]
  form_answers_func: count_functions
  mails(filter: mails_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [mails]
  mails_func: count_functions
}

type form_submissions_mutated {
  key: ID!
  event: EventEnum
  data: form_submissions
}

type forms {
  sort: Int

  """https://icons.expo.fyi/Index"""
  icon_expo: String
  alias: String
  internal_custom_id: String
  status: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  category(filter: form_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): form_categories
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  form_submissions(filter: form_submissions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [form_submissions]
  form_submissions_func: count_functions
  form_fields(filter: form_fields_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [form_fields]
  form_fields_func: count_functions
  translations(filter: forms_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [forms_translations]
  translations_func: count_functions
}

type forms_mutated {
  key: ID!
  event: EventEnum
  data: forms
}

type forms_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID!
  description: String
  name: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  forms_id(filter: forms_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): forms
}

type forms_translations_mutated {
  key: ID!
  event: EventEnum
  data: forms_translations
}

type languages {
  status: String
  name: String
  direction: String
  code: ID!
}

type languages_mutated {
  key: ID!
  event: EventEnum
  data: languages
}

type mails {
  send_attachments_as_links: Boolean
  sort: Int
  log: String
  markdown_content: String
  template_data: JSON
  template_data_func: count_functions
  status: String
  send_status: String
  template_name: String
  subject: String
  recipient: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  form_submission(filter: form_submissions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): form_submissions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  attachments(filter: mails_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [mails_files]
  attachments_func: count_functions
}

type mails_files {
  id: ID!
  directus_files_id(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  mails_id(filter: mails_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): mails
}

type mails_files_mutated {
  key: ID!
  event: EventEnum
  data: mails_files
}

type mails_mutated {
  key: ID!
  event: EventEnum
  data: mails
}

type markings {
  show_on_label_list: Boolean

  """Invertiere die Hintergrundfarbe, wenn kein Bild vorhanden ist."""
  invert_background_color: Boolean

  """Keinen Rand verwenden"""
  hide_border: Boolean
  show_on_card: Boolean
  sort: Int

  """
  Falls das Bild transparenten Hintergrund hat, kann hier die Hintergrundfarbe gesetzt werden.
  """
  background_color: String

  """Kürzel, welches Nutzern angezeigt werden soll"""
  short_code: String
  status: String
  image_thumb_hash: String

  """
  Falls kein Bild hochgeladen wurde, kann auch auf ein Bild von einer anderen Seite angezeigt werden.
  """
  image_remote_url: String

  """Icon from: https://icons.expo.fyi/Index"""
  icon: String
  external_identifier: String

  """Interne Bezeichnung - Nicht sichtbar für Nutzer"""
  alias: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  group(filter: markings_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): markings_groups
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  id: ID!
  excluded_by_markings(filter: markings_exclusions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [markings_exclusions]
  excluded_by_markings_func: count_functions
  translations(filter: markings_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [markings_translations]
  translations_func: count_functions
}

type markings_exclusions {
  id: ID!
  restricted_markings_id(filter: markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): markings
  restricted_by_markings_id(filter: markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): markings
}

type markings_exclusions_mutated {
  key: ID!
  event: EventEnum
  data: markings_exclusions
}

type markings_groups {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  translations(filter: markings_groups_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [markings_groups_translations]
  translations_func: count_functions
  markings(filter: markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [markings]
  markings_func: count_functions
}

type markings_groups_mutated {
  key: ID!
  event: EventEnum
  data: markings_groups
}

type markings_groups_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID!
  name: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  markings_groups_id(filter: markings_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): markings_groups
}

type markings_groups_translations_mutated {
  key: ID!
  event: EventEnum
  data: markings_groups_translations
}

type markings_mutated {
  key: ID!
  event: EventEnum
  data: markings
}

type markings_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID!
  description: String
  name: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  markings_id(filter: markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): markings
}

type markings_translations_mutated {
  key: ID!
  event: EventEnum
  data: markings_translations
}

type news {
  sort: Int
  categories: JSON
  categories_func: count_functions
  url: String
  status: String
  image_thumb_hash: String
  image_remote_url: String
  external_identifier: String
  alias: String
  date: Date
  date_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  id: ID!
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  translations(filter: news_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [news_translations]
  translations_func: count_functions
}

type news_mutated {
  key: ID!
  event: EventEnum
  data: news
}

type news_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID!
  content: String
  title: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  news_id(filter: news_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): news
}

type news_translations_mutated {
  key: ID!
  event: EventEnum
  data: news_translations
}

type policy_me_globals_type {
  enforce_tfa: Boolean
  app_access: Boolean
  admin_access: Boolean
}

type popup_events {
  show_on_android: Boolean
  show_on_ios: Boolean
  show_on_web: Boolean
  send_notification: Boolean
  sort: Int
  image_remote_url: String
  status: String
  image_thumb_hash: String
  alias: String

  """Falls ein Event nur bis zu einem bestimmten Zeitpunkt gültig ist."""
  date_end: Date
  date_end_func: datetime_functions

  """* Muss gesetzt sein"""
  date_start: Date!
  date_start_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  id: ID!
  canteens(filter: popup_events_canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [popup_events_canteens]
  canteens_func: count_functions
  translations(filter: popup_events_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [popup_events_translations]
  translations_func: count_functions
}

type popup_events_canteens {
  id: ID!
  popup_events_id(filter: popup_events_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): popup_events
  canteens_id(filter: canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteens
}

type popup_events_canteens_mutated {
  key: ID!
  event: EventEnum
  data: popup_events_canteens
}

type popup_events_mutated {
  key: ID!
  event: EventEnum
  data: popup_events
}

type popup_events_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID!
  content: String
  title: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  popup_events_id(filter: popup_events_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): popup_events
}

type popup_events_translations_mutated {
  key: ID!
  event: EventEnum
  data: popup_events_translations
}

type profiles {
  notifiy_on_free_apartments: Boolean
  sort: Int
  credit_balance_last_transaction: Float
  credit_balance: Float
  course_timetable: JSON
  course_timetable_func: count_functions
  avatar: JSON
  avatar_func: count_functions
  status: String
  price_group: String
  nickname: String
  language(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  date_updated: Date
  date_updated_func: datetime_functions
  credit_balance_date_updated: Date
  credit_balance_date_updated_func: datetime_functions
  date_privacy_policy_accepted: Date
  date_privacy_policy_accepted_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  canteen(filter: canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteens
  markings(filter: profiles_markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [profiles_markings]
  markings_func: count_functions
  buildings_favorites(filter: profiles_buildings_favorites_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [profiles_buildings_favorites]
  buildings_favorites_func: count_functions
  buildings_last_opened(filter: profiles_buildings_last_opened_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [profiles_buildings_last_opened]
  buildings_last_opened_func: count_functions
  devices(filter: devices_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [devices]
  devices_func: count_functions
  foods_feedbacks(filter: foods_feedbacks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_feedbacks]
  foods_feedbacks_func: count_functions
}

type profiles_buildings_favorites {
  id: ID!
  profiles_id(filter: profiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): profiles
  buildings_id(filter: buildings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): buildings
}

type profiles_buildings_favorites_mutated {
  key: ID!
  event: EventEnum
  data: profiles_buildings_favorites
}

type profiles_buildings_last_opened {
  id: ID!
  profiles_id(filter: profiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): profiles
  buildings_id(filter: buildings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): buildings
}

type profiles_buildings_last_opened_mutated {
  key: ID!
  event: EventEnum
  data: profiles_buildings_last_opened
}

type profiles_markings {
  dislike: Boolean
  like: Boolean
  id: ID!
  profiles_id(filter: profiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): profiles
  markings_id(filter: markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): markings
}

type profiles_markings_mutated {
  key: ID!
  event: EventEnum
  data: profiles_markings
}

type profiles_mutated {
  key: ID!
  event: EventEnum
  data: profiles
}

type push_notifications {
  ios_play_sound: Boolean
  ios_badge_count: Int
  message_ttl: Int
  sort: Int

  """
  Format: ExponentPushToken[xxxxxxxxxxxxxxxxx] with prefix and brackets, then press enter for more
  """
  expo_push_tokens: JSON
  expo_push_tokens_func: count_functions
  status_log: String
  message_data: JSON
  message_data_func: count_functions
  ios_message_subtitle: String
  expo_access_token: String
  android_channel_id: String
  richContent: String
  image_url: String
  status: String
  message_title: String
  message_body: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
}

type push_notifications_mutated {
  key: ID!
  event: EventEnum
  data: push_notifications
}

type report_recipients {
  sort: Int
  mail: String
  name: String
  status: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
}

type report_recipients_mutated {
  key: ID!
  event: EventEnum
  data: report_recipients
}

type server_info {
  project: server_info_project
  rateLimit: Boolean
  rateLimitGlobal: Boolean
  websocket: Boolean
  queryLimit: server_info_query_limit
}

type server_info_project {
  project_name: String
  project_descriptor: String
  project_logo: String
  project_color: String
  default_language: String
  public_foreground: String
  public_background: String
  public_note: String
  custom_css: String
  public_registration: Boolean
  public_registration_verify_email: Boolean
}

type server_info_query_limit {
  default: Int
  max: Int
}

type time_functions {
  hour: Int
  minute: Int
  second: Int
}

type users_me_tfa_generate_data {
  secret: String
  otpauth_url: String
}

type utilizations_entries {
  sort: Int
  value_forecast_current: Int
  value_real: Int
  status: String
  date_start: Date
  date_start_func: datetime_functions
  date_end: Date
  date_end_func: datetime_functions
  utilization_group(filter: utilizations_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): utilizations_groups
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
}

type utilizations_entries_mutated {
  key: ID!
  event: EventEnum
  data: utilizations_entries
}

type utilizations_groups {
  sort: Int
  threshold_until_low: Int
  threshold_until_medium: Int
  threshold_until_max: Int
  all_time_high: Int
  threshold_until_high: Int
  status: String
  alias: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  utilization_entries(filter: utilizations_entries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [utilizations_entries]
  utilization_entries_func: count_functions
}

type utilizations_groups_mutated {
  key: ID!
  event: EventEnum
  data: utilizations_groups
}

type washingmachines {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_stated: Date
  date_stated_func: datetime_functions
  date_finished: Date
  date_finished_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  apartment(filter: apartments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): apartments
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
}

type washingmachines_jobs {
  duration_in_minutes_calculated: Int
  duration_in_minutes_rounded_10min_calculated: Int
  sort: Int
  status: String
  date_start: Date
  date_start_func: datetime_functions
  date_end: Date
  date_end_func: datetime_functions
  duration_calculated: Date
  duration_calculated_func: time_functions
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  washingmachine(filter: washingmachines_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): washingmachines
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  apartment(filter: apartments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): apartments
}

type washingmachines_jobs_mutated {
  key: ID!
  event: EventEnum
  data: washingmachines_jobs
}

type washingmachines_mutated {
  key: ID!
  event: EventEnum
  data: washingmachines
}

type wikis {
  public: Boolean
  show_in_drawer: Boolean
  show_in_drawer_as_bottom_item: Boolean
  sort: Int
  position: Int
  color: String
  url: String
  status: String

  """Icon from: https://icons.expo.fyi/Index"""
  icon: String
  custom_id: String
  alias: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  parent(filter: wikis_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): wikis
  id: ID!
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  roles_required(filter: wikis_directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [wikis_directus_roles]
  roles_required_func: count_functions
  children(filter: wikis_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [wikis]
  children_func: count_functions
  translations(filter: wikis_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [wikis_translations]
  translations_func: count_functions
}

type wikis_directus_roles {
  id: ID!
  wikis_id(filter: wikis_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): wikis
  directus_roles_id(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
}

type wikis_directus_roles_mutated {
  key: ID!
  event: EventEnum
  data: wikis_directus_roles
}

type wikis_mutated {
  key: ID!
  event: EventEnum
  data: wikis
}

type wikis_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID!
  content: String
  title: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  wikis_id(filter: wikis_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): wikis
}

type wikis_translations_mutated {
  key: ID!
  event: EventEnum
  data: wikis_translations
}

type workflows {
  enabled: Boolean
  sort: Int
  alias: String
  status: String
  id: ID!
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  workflows_runs(filter: workflows_runs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [workflows_runs]
  workflows_runs_func: count_functions
}

type workflows_mutated {
  key: ID!
  event: EventEnum
  data: workflows
}

type workflows_runs {
  sort: Int
  runtime_in_seconds: Int
  log: String
  output: String
  input: String
  result_hash: String
  alias: String
  state: String
  workflow(filter: workflows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): workflows
  status: String
  date_created: Date
  date_created_func: datetime_functions
  date_finished: Date
  date_finished_func: datetime_functions
  date_started: Date
  date_started_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
}

type workflows_runs_mutated {
  key: ID!
  event: EventEnum
  data: workflows_runs
}

input apartments_filter {
  handicapped_accessible: boolean_filter_operators
  singleflat: boolean_filter_operators
  family_friendly: boolean_filter_operators
  sort: number_filter_operators
  status: string_filter_operators
  external_identifier: string_filter_operators
  available_from: date_filter_operators
  available_from_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  building: buildings_filter
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  washingmachines: washingmachines_filter
  washingmachines_func: count_function_filter_operators
  _and: [apartments_filter]
  _or: [apartments_filter]
}

input app_elements_filter {
  sort: number_filter_operators
  color: string_filter_operators
  status: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  id: string_filter_operators
  user_created: directus_users_filter
  translations: app_elements_translations_filter
  translations_func: count_function_filter_operators
  _and: [app_elements_filter]
  _or: [app_elements_filter]
}

input app_elements_translations_filter {
  id: number_filter_operators
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  content: string_filter_operators
  popup_content: string_filter_operators
  popup_button_text: string_filter_operators
  languages_code: languages_filter
  app_elements_id: app_elements_filter
  _and: [app_elements_translations_filter]
  _or: [app_elements_translations_filter]
}

input app_settings_balance_translations_filter {
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  app_settings_id: app_settings_filter
  id: number_filter_operators
  content: string_filter_operators
  languages_code: languages_filter
  _and: [app_settings_balance_translations_filter]
  _or: [app_settings_balance_translations_filter]
}

input app_settings_filter {
  campus_enabled: boolean_filter_operators
  utilization_display_enabled: boolean_filter_operators
  course_timetable_enabled: boolean_filter_operators
  balance_enabled: boolean_filter_operators
  news_enabled: boolean_filter_operators
  map_enabled: boolean_filter_operators
  housing_enabled: boolean_filter_operators
  foods_enabled: boolean_filter_operators
  foods_ratings_average_display: boolean_filter_operators
  foods_ratings_amount_display: boolean_filter_operators
  animations_auto_start: boolean_filter_operators
  notifications_ios_enabled: boolean_filter_operators
  notifications_email_enabled: boolean_filter_operators
  notifications_android_enabled: boolean_filter_operators
  id: number_filter_operators
  redirect_whitelist: string_filter_operators
  redirect_whitelist_func: count_function_filter_operators
  course_timetable_area_color: string_filter_operators
  balance_area_color: string_filter_operators
  campus_area_color: string_filter_operators
  news_area_color: string_filter_operators
  housing_area_color: string_filter_operators
  foods_area_color: string_filter_operators
  status: string_filter_operators
  foods_ratings_type: string_filter_operators
  foods_placeholder_image_thumb_hash: string_filter_operators
  foods_placeholder_image_remote_url: string_filter_operators
  foods_feedbacks_labels_type: string_filter_operators
  foods_feedbacks_custom_url: string_filter_operators
  foods_feedbacks_comments_type: string_filter_operators
  food_responsible_organization_name: string_filter_operators
  food_responsible_organization_link: string_filter_operators
  app_stores_url_to_google: string_filter_operators
  app_stores_url_to_apple: string_filter_operators
  date_privacy_policy_updated: date_filter_operators
  date_privacy_policy_updated_func: datetime_function_filter_operators
  maintenance_start: date_filter_operators
  maintenance_start_func: datetime_function_filter_operators
  maintenance_end: date_filter_operators
  maintenance_end_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  news_before_element: app_elements_filter
  company_image: directus_files_filter
  placeholder_image: directus_files_filter
  foodoffers_list_before_element: app_elements_filter
  foodoffers_list_after_element: app_elements_filter
  housing_before_element: app_elements_filter
  campus_before_element: app_elements_filter
  user_created: directus_users_filter
  user_updated: directus_users_filter
  foods_placeholder_image: directus_files_filter
  balance_translations: app_settings_balance_translations_filter
  balance_translations_func: count_function_filter_operators
  login_screen_translations: app_settings_login_screen_translations_filter
  login_screen_translations_func: count_function_filter_operators
  housing_translations: app_settings_housing_translations_filter
  housing_translations_func: count_function_filter_operators
  _and: [app_settings_filter]
  _or: [app_settings_filter]
}

input app_settings_housing_translations_filter {
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  id: number_filter_operators
  app_settings_id: app_settings_filter
  content: string_filter_operators
  languages_code: languages_filter
  _and: [app_settings_housing_translations_filter]
  _or: [app_settings_housing_translations_filter]
}

input app_settings_login_screen_translations_filter {
  be_source_for_translations: boolean_filter_operators
  let_be_translated: boolean_filter_operators
  app_settings_id: app_settings_filter
  id: number_filter_operators
  detailed_description: string_filter_operators
  intro_description: string_filter_operators
  languages_code: languages_filter
  _and: [app_settings_login_screen_translations_filter]
  _or: [app_settings_login_screen_translations_filter]
}

input big_int_filter_operators {
  _eq: GraphQLBigInt
  _neq: GraphQLBigInt
  _in: [GraphQLBigInt]
  _nin: [GraphQLBigInt]
  _gt: GraphQLBigInt
  _gte: GraphQLBigInt
  _lt: GraphQLBigInt
  _lte: GraphQLBigInt
  _null: Boolean
  _nnull: Boolean
  _between: [GraphQLBigInt]
  _nbetween: [GraphQLBigInt]
}

input boolean_filter_operators {
  _eq: Boolean
  _neq: Boolean
  _null: Boolean
  _nnull: Boolean
}

input buildings_businesshours_filter {
  id: number_filter_operators
  buildings_id: buildings_filter
  businesshours_id: businesshours_filter
  _and: [buildings_businesshours_filter]
  _or: [buildings_businesshours_filter]
}

input buildings_filter {
  sort: number_filter_operators
  coordinates: string_filter_operators
  coordinates_func: count_function_filter_operators
  url: string_filter_operators
  status: string_filter_operators
  image_thumb_hash: string_filter_operators
  image_remote_url: string_filter_operators
  external_identifier: string_filter_operators
  alias: string_filter_operators
  date_of_construction: date_filter_operators
  date_of_construction_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  image: directus_files_filter
  id: string_filter_operators
  translations: buildings_translations_filter
  translations_func: count_function_filter_operators
  apartments: apartments_filter
  apartments_func: count_function_filter_operators
  businesshours: buildings_businesshours_filter
  businesshours_func: count_function_filter_operators
  _and: [buildings_filter]
  _or: [buildings_filter]
}

input buildings_translations_filter {
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  id: number_filter_operators
  content: string_filter_operators
  languages_code: languages_filter
  buildings_id: buildings_filter
  _and: [buildings_translations_filter]
  _or: [buildings_translations_filter]
}

input businesshours_filter {
  wednesday: boolean_filter_operators
  tuesday: boolean_filter_operators
  thursday: boolean_filter_operators
  sunday: boolean_filter_operators
  saturday: boolean_filter_operators
  monday: boolean_filter_operators
  friday: boolean_filter_operators
  sort: number_filter_operators
  status: string_filter_operators
  time_start: date_filter_operators
  time_start_func: time_function_filter_operators
  time_end: date_filter_operators
  time_end_func: time_function_filter_operators
  date_valid_from: date_filter_operators
  date_valid_from_func: date_function_filter_operators
  date_valid_till: date_filter_operators
  date_valid_till_func: date_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  group: businesshours_groups_filter
  _and: [businesshours_filter]
  _or: [businesshours_filter]
}

input businesshours_groups_filter {
  sort: number_filter_operators
  alias: string_filter_operators
  status: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  id: string_filter_operators
  translations: businesshours_groups_translations_filter
  translations_func: count_function_filter_operators
  _and: [businesshours_groups_filter]
  _or: [businesshours_groups_filter]
}

input businesshours_groups_translations_filter {
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  id: number_filter_operators
  name: string_filter_operators
  languages_code: languages_filter
  businesshours_groups_id: businesshours_groups_filter
  _and: [businesshours_groups_translations_filter]
  _or: [businesshours_groups_translations_filter]
}

input canteen_food_feedback_report_schedules_canteens_filter {
  id: number_filter_operators
  canteen_food_feedback_report_schedules_id: canteen_food_feedback_report_schedules_filter
  canteens_id: canteens_filter
  _and: [canteen_food_feedback_report_schedules_canteens_filter]
  _or: [canteen_food_feedback_report_schedules_canteens_filter]
}

input canteen_food_feedback_report_schedules_filter {
  show_food_feedback_labels_for_all_time: boolean_filter_operators
  show_canteen_feedbacks_for_all_time: boolean_filter_operators
  show_canteen_feedbacks_for_selected_period: boolean_filter_operators
  show_canteen_feedbacks_also_per_canteen: boolean_filter_operators
  report_send_successfully: boolean_filter_operators
  send_on_sundays: boolean_filter_operators
  send_on_saturdays: boolean_filter_operators
  send_on_fridays: boolean_filter_operators
  send_on_thursdays: boolean_filter_operators
  send_on_wednesdays: boolean_filter_operators
  send_on_tuesdays: boolean_filter_operators
  send_on_mondays: boolean_filter_operators
  show_images: boolean_filter_operators
  enabled: boolean_filter_operators
  show_food_comments_for_all_time: boolean_filter_operators
  show_food_comments_for_selected_period: boolean_filter_operators
  show_food_feedback_labels_for_selected_period: boolean_filter_operators
  sort: number_filter_operators
  period_days_offset: number_filter_operators
  period_days_amount: number_filter_operators
  report_status_log: string_filter_operators
  alias: string_filter_operators
  status: string_filter_operators
  date_next_report_is_due: date_filter_operators
  date_next_report_is_due_func: datetime_function_filter_operators
  send_report_at_hh_mm: date_filter_operators
  send_report_at_hh_mm_func: time_function_filter_operators
  send_once_now_for_reference_date: date_filter_operators
  send_once_now_for_reference_date_func: date_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  canteens: canteen_food_feedback_report_schedules_canteens_filter
  canteens_func: count_function_filter_operators
  recipients: canteen_food_feedback_report_schedules_report_recipients_filter
  recipients_func: count_function_filter_operators
  _and: [canteen_food_feedback_report_schedules_filter]
  _or: [canteen_food_feedback_report_schedules_filter]
}

input canteen_food_feedback_report_schedules_report_recipients_filter {
  id: number_filter_operators
  canteen_food_feedback_report_schedules_id: canteen_food_feedback_report_schedules_filter
  report_recipients_id: report_recipients_filter
  _and: [canteen_food_feedback_report_schedules_report_recipients_filter]
  _or: [canteen_food_feedback_report_schedules_report_recipients_filter]
}

input canteens_feedbacks_labels_filter {
  sort: number_filter_operators
  image_thumb_hash: string_filter_operators
  image_remote_url: string_filter_operators
  icon: string_filter_operators
  alias: string_filter_operators
  status: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  image: directus_files_filter
  translations: canteens_feedbacks_labels_translations_filter
  translations_func: count_function_filter_operators
  _and: [canteens_feedbacks_labels_filter]
  _or: [canteens_feedbacks_labels_filter]
}

input canteens_feedbacks_labels_translations_filter {
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  id: number_filter_operators
  text: string_filter_operators
  languages_code: languages_filter
  canteens_feedbacks_labels_id: canteens_feedbacks_labels_filter
  _and: [canteens_feedbacks_labels_translations_filter]
  _or: [canteens_feedbacks_labels_translations_filter]
}

input canteens_filter {
  foodoffers_import_delete_all_without_dates: boolean_filter_operators
  foodoffers_import_without_date: boolean_filter_operators
  sort: number_filter_operators
  alias: string_filter_operators
  status: string_filter_operators
  external_identifier: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  id: string_filter_operators
  building: buildings_filter
  utilization_group: utilizations_groups_filter
  user_updated: directus_users_filter
  user_created: directus_users_filter
  _and: [canteens_filter]
  _or: [canteens_filter]
}

input cashregisters_filter {
  sort: number_filter_operators
  status: string_filter_operators
  external_identifier: string_filter_operators
  alias: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  id: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  canteen: canteens_filter
  transactions: cashregisters_transactions_filter
  transactions_func: count_function_filter_operators
  _and: [cashregisters_filter]
  _or: [cashregisters_filter]
}

input cashregisters_transactions_filter {
  weekday_index_calculated: number_filter_operators
  sort: number_filter_operators
  quantity: number_filter_operators
  status: string_filter_operators
  name: string_filter_operators
  id: string_filter_operators
  date: date_filter_operators
  date_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  cashregister: cashregisters_filter
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [cashregisters_transactions_filter]
  _or: [cashregisters_transactions_filter]
}

input collectible_event_participants_filter {
  sort: number_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  points: string_filter_operators
  phone_number: string_filter_operators
  email: string_filter_operators
  status: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: string_filter_operators
  profile: profiles_filter
  user_updated: directus_users_filter
  user_created: directus_users_filter
  collectible_event: collectible_events_filter
  _and: [collectible_event_participants_filter]
  _or: [collectible_event_participants_filter]
}

input collectible_events_filter {
  monitor_display_number_of_participants: boolean_filter_operators
  monitor_display_number_of_collected_items: boolean_filter_operators
  sort: number_filter_operators
  points_maximum: string_filter_operators
  points_minimum: string_filter_operators
  alias: string_filter_operators
  status: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_start: date_filter_operators
  date_start_func: datetime_function_filter_operators
  date_end: date_filter_operators
  date_end_func: datetime_function_filter_operators
  id: string_filter_operators
  user_created: directus_users_filter
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  collectible_image: directus_files_filter
  monitor_background_image: directus_files_filter
  participants: collectible_event_participants_filter
  participants_func: count_function_filter_operators
  translations: collectible_events_translations_filter
  translations_func: count_function_filter_operators
  _and: [collectible_events_filter]
  _or: [collectible_events_filter]
}

input collectible_events_translations_filter {
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  id: number_filter_operators
  description: string_filter_operators
  title: string_filter_operators
  languages_code: languages_filter
  collectible_events_id: collectible_events_filter
  _and: [collectible_events_translations_filter]
  _or: [collectible_events_translations_filter]
}

input count_function_filter_operators {
  count: number_filter_operators
}

input create_apartments_input {
  handicapped_accessible: Boolean
  singleflat: Boolean
  family_friendly: Boolean
  sort: Int
  status: String
  external_identifier: String
  available_from: Date
  date_created: Date
  date_updated: Date
  building: create_buildings_input
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
  washingmachines: [create_washingmachines_input]
}

input create_buildings_businesshours_input {
  id: ID
  buildings_id: create_buildings_input
  businesshours_id: create_businesshours_input
}

input create_buildings_input {
  sort: Int
  coordinates: JSON
  url: String
  status: String
  image_thumb_hash: String
  image_remote_url: String
  external_identifier: String
  alias: String
  date_of_construction: Date
  date_created: Date
  date_updated: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  image: create_directus_files_input
  id: ID
  translations: [create_buildings_translations_input]
  apartments: [create_apartments_input]
  businesshours: [create_buildings_businesshours_input]
}

input create_buildings_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  content: String
  languages_code: create_languages_input
  buildings_id: create_buildings_input
}

input create_businesshours_groups_input {
  sort: Int
  alias: String
  status: String
  date_created: Date
  date_updated: Date
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
  id: ID
  translations: [create_businesshours_groups_translations_input]
}

input create_businesshours_groups_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  name: String
  languages_code: create_languages_input
  businesshours_groups_id: create_businesshours_groups_input
}

input create_businesshours_input {
  wednesday: Boolean
  tuesday: Boolean
  thursday: Boolean
  sunday: Boolean
  saturday: Boolean
  monday: Boolean
  friday: Boolean
  sort: Int
  status: String
  time_start: Date
  time_end: Date

  """Leave empty to use default; overridden by other defined ranges."""
  date_valid_from: Date

  """Leave empty to use default; overridden by other defined ranges."""
  date_valid_till: Date
  date_created: Date
  date_updated: Date
  id: ID
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
  group: create_businesshours_groups_input
}

input create_canteens_input {
  """
  Beim Importieren von Speiseangeboten werden alle statischen Speiseangebote gelöscht, also die ohne Datum.
  """
  foodoffers_import_delete_all_without_dates: Boolean

  """
  Beim Importieren von Speiseangeboten sind die Angebote für alle Tage gültig und haben daher kein Datum.
  """
  foodoffers_import_without_date: Boolean
  sort: Int
  alias: String
  status: String
  external_identifier: String
  date_updated: Date
  date_created: Date
  id: ID
  building: create_buildings_input
  utilization_group: create_utilizations_groups_input
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
}

input create_devices_input {
  is_simulator: Boolean
  is_tablet: Boolean
  is_web: Boolean
  is_android: Boolean
  is_ios: Boolean
  is_landscape: Boolean
  sort: Int
  display_scale: Float
  display_pixelratio: Float
  display_height: Float
  display_fontscale: Float
  pushTokenObj: JSON
  display_width: Float
  system_version: String
  status: String
  platform: String
  brand: String
  alias: String
  date_created: Date
  date_updated: Date
  id: ID
  profile: create_profiles_input
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
}

input create_directus_access_input {
  sort: Int
  id: ID
  role: create_directus_roles_input
  user: create_directus_users_input
  policy: create_directus_policies_input
}

input create_directus_collections_fields_input {
  collection: String
  field: String
  type: String
  meta: directus_fields_meta_input
  schema: directus_fields_schema_input
}

input create_directus_collections_input {
  collection: String
  meta: directus_collections_meta_input
  schema: directus_collections_schema_input
  fields: [create_directus_collections_fields_input!]
}

input create_directus_comments_input {
  comment: String!
  item: String!
  collection: String!
  date_created: Date
  date_updated: Date
  id: ID
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
}

input create_directus_dashboards_input {
  note: String
  color: String
  icon: String
  name: String!
  date_created: Date
  user_created: create_directus_users_input
  id: ID
  panels: [create_directus_panels_input]
}

input create_directus_fields_input {
  collection: String
  field: String
  type: String
  meta: directus_fields_meta_input
  schema: directus_fields_schema_input
}

input create_directus_files_input {
  is_unreferenced: Boolean
  focal_point_y: Int
  focal_point_x: Int
  duration: Int
  height: Int
  width: Int
  filesize: GraphQLBigInt
  description: String
  location: String
  tags: JSON
  metadata: JSON
  tus_data: JSON
  tus_id: String
  embed: String
  charset: String
  type: String
  title: String
  filename_download: String!
  filename_disk: String
  storage: String!
  created_on: Date
  modified_on: Date
  uploaded_on: Date
  id: ID
  folder: create_directus_folders_input
  uploaded_by: create_directus_users_input
  modified_by: create_directus_users_input
}

input create_directus_flows_input {
  description: String
  options: JSON
  accountability: String
  trigger: String
  status: String
  color: String
  icon: String
  name: String!
  date_created: Date
  id: ID
  operation: create_directus_operations_input
  user_created: create_directus_users_input
  operations: [create_directus_operations_input]
}

input create_directus_folders_input {
  name: String!
  id: ID
  parent: create_directus_folders_input
}

input create_directus_notifications_input {
  id: ID
  message: String
  item: String
  collection: String
  subject: String!
  status: String
  timestamp: Date
  recipient: create_directus_users_input
  sender: create_directus_users_input
}

input create_directus_operations_input {
  position_y: Int!
  position_x: Int!
  options: JSON
  type: String!
  key: String!
  name: String
  date_created: Date
  flow: create_directus_flows_input
  user_created: create_directus_users_input
  id: ID
  resolve: create_directus_operations_input
  reject: create_directus_operations_input
}

input create_directus_panels_input {
  show_header: Boolean!
  height: Int!
  width: Int!
  position_y: Int!
  position_x: Int!
  note: String
  options: JSON
  color: String
  icon: String
  name: String
  type: String!
  date_created: Date
  id: ID
  dashboard: create_directus_dashboards_input
  user_created: create_directus_users_input
}

input create_directus_permissions_input {
  id: ID
  fields: [String]
  validation: JSON
  presets: JSON
  permissions: JSON
  action: String!
  collection: String!
  policy: create_directus_policies_input
}

input create_directus_policies_input {
  """$t:field_options.directus_policies.enforce_tfa"""
  enforce_tfa: Boolean!
  admin_access: Boolean!
  app_access: Boolean!
  ip_access: [String]
  description: String
  icon: String
  name: String!
  id: ID
  permissions: [create_directus_permissions_input]
  users: [create_directus_access_input]
  roles: [create_directus_access_input]
}

input create_directus_presets_input {
  refresh_interval: Int
  id: ID
  filter: JSON
  layout_query: JSON
  layout_options: JSON
  color: String
  icon: String
  layout: String
  search: String
  collection: String
  bookmark: String
  user: create_directus_users_input
  role: create_directus_roles_input
}

input create_directus_relations_input {
  collection: String
  field: String
  related_collection: String
  schema: directus_relations_schema_input
  meta: directus_relations_meta_input
}

input create_directus_roles_input {
  description: String
  icon: String
  name: String!
  id: ID
  parent: create_directus_roles_input
  children: [create_directus_roles_input]
  policies: [create_directus_access_input]
  users: [create_directus_users_input]
}

input create_directus_shares_input {
  """$t:shared_leave_blank_for_unlimited"""
  max_uses: Int
  times_used: Int

  """$t:shared_leave_blank_for_passwordless_access"""
  password: Hash
  item: String!
  collection: String!
  name: String
  date_created: Date

  """$t:shared_leave_blank_for_unlimited"""
  date_start: Date

  """$t:shared_leave_blank_for_unlimited"""
  date_end: Date
  id: ID
  role: create_directus_roles_input
  user_created: create_directus_users_input
}

input create_directus_translations_input {
  value: String!
  key: String!
  language: String!
  id: ID
}

input create_directus_users_input {
  email_notifications: Boolean
  description: String
  tags: JSON
  auth_data: JSON
  theme_dark_overrides: JSON
  theme_light_overrides: JSON
  last_page: String
  token: Hash
  status: String
  tfa_secret: Hash
  language: String
  title: String
  location: String
  password: Hash
  email: String
  last_name: String
  first_name: String
  theme_light: String
  theme_dark: String
  appearance: String
  external_identifier: String
  provider: String
  last_access: Date
  profile: create_profiles_input
  id: ID
  avatar: create_directus_files_input
  role: create_directus_roles_input
  policies: [create_directus_access_input]
}

input create_directus_versions_input {
  delta: JSON
  hash: String
  item: String!
  collection: String!
  name: String
  key: String!
  date_created: Date
  date_updated: Date
  id: ID
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
}

input create_directus_webhooks_input {
  was_active_before_deprecation: Boolean!
  data: Boolean
  id: ID
  headers: JSON
  collections: [String]!
  actions: [String]!
  status: String
  url: String!
  method: String
  name: String!
  migrated_flow: create_directus_flows_input
}

input create_foodoffers_categories_input {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
  translations: [create_foodoffers_categories_translations_input]
}

input create_foodoffers_categories_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  name: String
  languages_code: create_languages_input
  foodoffers_categories_id: create_foodoffers_categories_input
}

input create_foodoffers_input {
  sort: Int
  price_student: Float
  price_guest: Float
  price_employee: Float
  redirect_url: String
  category: String
  status: String
  food: create_foods_input
  alias: String
  date: Date
  date_updated: Date
  date_created: Date
  foodoffer_category: create_foodoffers_categories_input
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
  canteen: create_canteens_input
  markings: [create_foodoffers_markings_input]
  attribute_values: [create_foods_attributes_values_input]
}

input create_foodoffers_markings_input {
  id: ID
  markings_id: create_markings_input
  foodoffers_id: create_foodoffers_input
}

input create_foods_attributes_groups_input {
  sort: Int
  background_color: String
  image_thumb_hash: String
  image_remote_url: String
  icon_expo: String
  icon: String
  status: String
  alias: String
  date_updated: Date
  date_created: Date
  image: create_directus_files_input
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
  food_attributes: [create_foods_attributes_input]
  translations: [create_foods_attributes_groups_translations_input]
}

input create_foods_attributes_groups_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  name: String
  languages_code: create_languages_input
  foods_attributes_groups_id: create_foods_attributes_groups_input
}

input create_foods_attributes_input {
  show_on_card: Boolean
  show_on_label_list: Boolean
  full_width: Boolean
  sort: Int
  suffix: String
  prefix: String
  status: String
  image_thumb_hash: String
  image_remote_url: String

  """https://icons.expo.fyi/Index"""
  icon_expo: String
  external_identifier: String
  background_color: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  image: create_directus_files_input
  id: ID
  group: create_foods_attributes_groups_input
  translations: [create_foods_attributes_translations_input]
}

input create_foods_attributes_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  description: String
  name: String
  languages_code: create_languages_input
  foods_attributes_id: create_foods_attributes_input
}

input create_foods_attributes_values_input {
  boolean_value: Boolean
  number_value: Float
  food_id: create_foods_input
  string_value: String
  icon_value: String
  color_value: String
  foodoffer_id: create_foodoffers_input
  id: ID
  food_attribute: create_foods_attributes_input
}

input create_foods_categories_input {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
  translations: [create_foods_categories_translations_input]
}

input create_foods_categories_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  languages_code: create_languages_input
  name: String
  foods_categories_id: create_foods_categories_input
}

input create_foods_feedbacks_input {
  notify: Boolean
  rating: Int
  sort: Int
  comment: String
  status: String
  food: create_foods_input
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  profile: create_profiles_input
  id: ID
  foodoffer: create_foodoffers_input
  canteen: create_canteens_input
}

input create_foods_input {
  rating_amount: Int
  sort: Int
  rating_amount_legacy: Int
  rating_average_legacy: Float
  rating_average: Float
  status: String
  image_thumb_hash: String
  image_remote_url: String
  id: ID!
  extra: String
  category: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  image: create_directus_files_input
  food_category: create_foods_categories_input
  feedbacks: [create_foods_feedbacks_input]
  markings: [create_foods_markings_input]
  translations: [create_foods_translations_input]
  attribute_values: [create_foods_attributes_values_input]
}

input create_foods_markings_input {
  id: ID
  foods_id: create_foods_input
  markings_id: create_markings_input
}

input create_foods_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  name: String
  languages_code: create_languages_input
  foods_id: create_foods_input
}

input create_languages_input {
  status: String
  name: String
  direction: String
  code: ID!
}

input create_markings_exclusions_input {
  id: ID
  restricted_markings_id: create_markings_input
  restricted_by_markings_id: create_markings_input
}

input create_markings_groups_input {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
  translations: [create_markings_groups_translations_input]
  markings: [create_markings_input]
}

input create_markings_groups_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  name: String
  languages_code: create_languages_input
  markings_groups_id: create_markings_groups_input
}

input create_markings_input {
  show_on_label_list: Boolean

  """Invertiere die Hintergrundfarbe, wenn kein Bild vorhanden ist."""
  invert_background_color: Boolean

  """Keinen Rand verwenden"""
  hide_border: Boolean
  show_on_card: Boolean
  sort: Int

  """
  Falls das Bild transparenten Hintergrund hat, kann hier die Hintergrundfarbe gesetzt werden.
  """
  background_color: String

  """Kürzel, welches Nutzern angezeigt werden soll"""
  short_code: String
  status: String
  image_thumb_hash: String

  """
  Falls kein Bild hochgeladen wurde, kann auch auf ein Bild von einer anderen Seite angezeigt werden.
  """
  image_remote_url: String

  """Icon from: https://icons.expo.fyi/Index"""
  icon: String
  external_identifier: String

  """Interne Bezeichnung - Nicht sichtbar für Nutzer"""
  alias: String
  date_updated: Date
  date_created: Date
  group: create_markings_groups_input
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  image: create_directus_files_input
  id: ID
  excluded_by_markings: [create_markings_exclusions_input]
  translations: [create_markings_translations_input]
}

input create_markings_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  description: String
  name: String
  languages_code: create_languages_input
  markings_id: create_markings_input
}

input create_profiles_buildings_favorites_input {
  id: ID
  profiles_id: create_profiles_input
  buildings_id: create_buildings_input
}

input create_profiles_buildings_last_opened_input {
  id: ID
  profiles_id: create_profiles_input
  buildings_id: create_buildings_input
}

input create_profiles_input {
  notifiy_on_free_apartments: Boolean
  sort: Int
  credit_balance_last_transaction: Float
  credit_balance: Float
  course_timetable: JSON
  avatar: JSON
  status: String
  price_group: String
  nickname: String
  language: create_languages_input
  date_updated: Date
  credit_balance_date_updated: Date
  date_privacy_policy_accepted: Date
  date_created: Date
  user_created: create_directus_users_input
  id: ID
  user_updated: create_directus_users_input
  canteen: create_canteens_input
  markings: [create_profiles_markings_input]
  buildings_favorites: [create_profiles_buildings_favorites_input]
  buildings_last_opened: [create_profiles_buildings_last_opened_input]
  devices: [create_devices_input]
  foods_feedbacks: [create_foods_feedbacks_input]
}

input create_profiles_markings_input {
  dislike: Boolean
  like: Boolean
  id: ID
  profiles_id: create_profiles_input
  markings_id: create_markings_input
}

input create_utilizations_entries_input {
  sort: Int
  value_forecast_current: Int
  value_real: Int
  status: String
  date_start: Date
  date_end: Date
  utilization_group: create_utilizations_groups_input
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
}

input create_utilizations_groups_input {
  sort: Int
  threshold_until_low: Int
  threshold_until_medium: Int
  threshold_until_max: Int
  all_time_high: Int
  threshold_until_high: Int
  status: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
  utilization_entries: [create_utilizations_entries_input]
}

input create_washingmachines_input {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_stated: Date
  date_finished: Date
  date_updated: Date
  date_created: Date
  apartment: create_apartments_input
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
}

input date_filter_operators {
  _eq: String
  _neq: String
  _gt: String
  _gte: String
  _lt: String
  _lte: String
  _null: Boolean
  _nnull: Boolean
  _in: [String]
  _nin: [String]
  _between: [GraphQLStringOrFloat]
  _nbetween: [GraphQLStringOrFloat]
}

input date_function_filter_operators {
  year: number_filter_operators
  month: number_filter_operators
  week: number_filter_operators
  day: number_filter_operators
  weekday: number_filter_operators
}

input datetime_function_filter_operators {
  year: number_filter_operators
  month: number_filter_operators
  week: number_filter_operators
  day: number_filter_operators
  weekday: number_filter_operators
  hour: number_filter_operators
  minute: number_filter_operators
  second: number_filter_operators
}

input devices_filter {
  is_simulator: boolean_filter_operators
  is_tablet: boolean_filter_operators
  is_web: boolean_filter_operators
  is_android: boolean_filter_operators
  is_ios: boolean_filter_operators
  is_landscape: boolean_filter_operators
  sort: number_filter_operators
  display_scale: number_filter_operators
  display_pixelratio: number_filter_operators
  display_height: number_filter_operators
  display_fontscale: number_filter_operators
  pushTokenObj: string_filter_operators
  pushTokenObj_func: count_function_filter_operators
  display_width: number_filter_operators
  system_version: string_filter_operators
  status: string_filter_operators
  platform: string_filter_operators
  brand: string_filter_operators
  alias: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: string_filter_operators
  profile: profiles_filter
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [devices_filter]
  _or: [devices_filter]
}

input directus_access_filter {
  sort: number_filter_operators
  id: string_filter_operators
  role: directus_roles_filter
  user: directus_users_filter
  policy: directus_policies_filter
  _and: [directus_access_filter]
  _or: [directus_access_filter]
}

input directus_activity_filter {
  id: number_filter_operators
  user_agent: string_filter_operators
  origin: string_filter_operators
  item: string_filter_operators
  collection: string_filter_operators
  ip: string_filter_operators
  action: string_filter_operators
  timestamp: date_filter_operators
  timestamp_func: datetime_function_filter_operators
  user: directus_users_filter
  revisions: directus_revisions_filter
  revisions_func: count_function_filter_operators
  _and: [directus_activity_filter]
  _or: [directus_activity_filter]
}

input directus_collections_meta_input {
  archive_app_filter: Boolean!
  versioning: Boolean!
  hidden: Boolean!
  sort: Int
  singleton: Boolean!
  note: String
  translations: JSON
  item_duplication_fields: JSON
  preview_url: String
  collapse: String!
  group: String
  color: String
  accountability: String
  sort_field: String
  unarchive_value: String
  archive_value: String
  archive_field: String
  display_template: String
  icon: String
  collection: String!
}

input directus_collections_schema_input {
  name: String
  comment: String
}

input directus_comments_filter {
  comment: string_filter_operators
  item: string_filter_operators
  collection: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [directus_comments_filter]
  _or: [directus_comments_filter]
}

input directus_dashboards_filter {
  note: string_filter_operators
  color: string_filter_operators
  icon: string_filter_operators
  name: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  id: string_filter_operators
  panels: directus_panels_filter
  panels_func: count_function_filter_operators
  _and: [directus_dashboards_filter]
  _or: [directus_dashboards_filter]
}

input directus_fields_meta_input {
  hidden: Boolean!
  required: Boolean
  readonly: Boolean!
  sort: Int
  id: Int!
  display_options: JSON
  options: JSON
  validation_message: String
  note: String
  translations: JSON
  validation: JSON
  conditions: JSON
  group: String
  width: String
  display: String
  interface: String
  special: [String]
  field: String!
  collection: String!
}

input directus_fields_schema_input {
  name: String
  table: String
  data_type: String
  default_value: String
  max_length: Int
  numeric_precision: Int
  numeric_scale: Int
  is_generated: Boolean
  generation_expression: String
  is_indexed: Boolean
  is_nullable: Boolean
  is_unique: Boolean
  is_primary_key: Boolean
  has_auto_increment: Boolean
  foreign_key_column: String
  foreign_key_table: String
  comment: String
}

input directus_files_filter {
  is_unreferenced: boolean_filter_operators
  focal_point_y: number_filter_operators
  focal_point_x: number_filter_operators
  duration: number_filter_operators
  height: number_filter_operators
  width: number_filter_operators
  filesize: big_int_filter_operators
  description: string_filter_operators
  location: string_filter_operators
  tags: string_filter_operators
  tags_func: count_function_filter_operators
  metadata: string_filter_operators
  metadata_func: count_function_filter_operators
  tus_data: string_filter_operators
  tus_data_func: count_function_filter_operators
  tus_id: string_filter_operators
  embed: string_filter_operators
  charset: string_filter_operators
  type: string_filter_operators
  title: string_filter_operators
  filename_download: string_filter_operators
  filename_disk: string_filter_operators
  storage: string_filter_operators
  created_on: date_filter_operators
  created_on_func: datetime_function_filter_operators
  modified_on: date_filter_operators
  modified_on_func: datetime_function_filter_operators
  uploaded_on: date_filter_operators
  uploaded_on_func: datetime_function_filter_operators
  id: string_filter_operators
  folder: directus_folders_filter
  uploaded_by: directus_users_filter
  modified_by: directus_users_filter
  _and: [directus_files_filter]
  _or: [directus_files_filter]
}

input directus_flows_filter {
  description: string_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  accountability: string_filter_operators
  trigger: string_filter_operators
  status: string_filter_operators
  color: string_filter_operators
  icon: string_filter_operators
  name: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  id: string_filter_operators
  operation: directus_operations_filter
  user_created: directus_users_filter
  operations: directus_operations_filter
  operations_func: count_function_filter_operators
  _and: [directus_flows_filter]
  _or: [directus_flows_filter]
}

input directus_folders_filter {
  name: string_filter_operators
  id: string_filter_operators
  parent: directus_folders_filter
  _and: [directus_folders_filter]
  _or: [directus_folders_filter]
}

input directus_notifications_filter {
  id: number_filter_operators
  message: string_filter_operators
  item: string_filter_operators
  collection: string_filter_operators
  subject: string_filter_operators
  status: string_filter_operators
  timestamp: date_filter_operators
  timestamp_func: datetime_function_filter_operators
  recipient: directus_users_filter
  sender: directus_users_filter
  _and: [directus_notifications_filter]
  _or: [directus_notifications_filter]
}

input directus_operations_filter {
  position_y: number_filter_operators
  position_x: number_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  type: string_filter_operators
  key: string_filter_operators
  name: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  flow: directus_flows_filter
  user_created: directus_users_filter
  id: string_filter_operators
  resolve: directus_operations_filter
  reject: directus_operations_filter
  _and: [directus_operations_filter]
  _or: [directus_operations_filter]
}

input directus_panels_filter {
  show_header: boolean_filter_operators
  height: number_filter_operators
  width: number_filter_operators
  position_y: number_filter_operators
  position_x: number_filter_operators
  note: string_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  color: string_filter_operators
  icon: string_filter_operators
  name: string_filter_operators
  type: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  id: string_filter_operators
  dashboard: directus_dashboards_filter
  user_created: directus_users_filter
  _and: [directus_panels_filter]
  _or: [directus_panels_filter]
}

input directus_permissions_filter {
  id: number_filter_operators
  fields: string_filter_operators
  validation: string_filter_operators
  validation_func: count_function_filter_operators
  presets: string_filter_operators
  presets_func: count_function_filter_operators
  permissions: string_filter_operators
  permissions_func: count_function_filter_operators
  action: string_filter_operators
  collection: string_filter_operators
  policy: directus_policies_filter
  _and: [directus_permissions_filter]
  _or: [directus_permissions_filter]
}

input directus_policies_filter {
  enforce_tfa: boolean_filter_operators
  admin_access: boolean_filter_operators
  app_access: boolean_filter_operators
  ip_access: string_filter_operators
  description: string_filter_operators
  icon: string_filter_operators
  name: string_filter_operators
  id: string_filter_operators
  permissions: directus_permissions_filter
  permissions_func: count_function_filter_operators
  users: directus_access_filter
  users_func: count_function_filter_operators
  roles: directus_access_filter
  roles_func: count_function_filter_operators
  _and: [directus_policies_filter]
  _or: [directus_policies_filter]
}

input directus_presets_filter {
  refresh_interval: number_filter_operators
  id: number_filter_operators
  filter: string_filter_operators
  filter_func: count_function_filter_operators
  layout_query: string_filter_operators
  layout_query_func: count_function_filter_operators
  layout_options: string_filter_operators
  layout_options_func: count_function_filter_operators
  color: string_filter_operators
  icon: string_filter_operators
  layout: string_filter_operators
  search: string_filter_operators
  collection: string_filter_operators
  bookmark: string_filter_operators
  user: directus_users_filter
  role: directus_roles_filter
  _and: [directus_presets_filter]
  _or: [directus_presets_filter]
}

input directus_relations_meta_input {
  id: Int
  one_allowed_collections: [String]
  one_deselect_action: String
  sort_field: String
  junction_field: String
  one_collection_field: String
  one_field: String
  one_collection: String
  many_field: String
  many_collection: String
}

input directus_relations_schema_input {
  table: String!
  column: String!
  foreign_key_table: String!
  foreign_key_column: String!
  constraint_name: String
  on_update: String!
  on_delete: String!
}

input directus_revisions_filter {
  id: number_filter_operators
  activity: directus_activity_filter
  parent: directus_revisions_filter
  delta: string_filter_operators
  delta_func: count_function_filter_operators
  data: string_filter_operators
  data_func: count_function_filter_operators
  item: string_filter_operators
  collection: string_filter_operators
  version: directus_versions_filter
  _and: [directus_revisions_filter]
  _or: [directus_revisions_filter]
}

input directus_roles_filter {
  description: string_filter_operators
  icon: string_filter_operators
  name: string_filter_operators
  id: string_filter_operators
  parent: directus_roles_filter
  children: directus_roles_filter
  children_func: count_function_filter_operators
  policies: directus_access_filter
  policies_func: count_function_filter_operators
  users: directus_users_filter
  users_func: count_function_filter_operators
  _and: [directus_roles_filter]
  _or: [directus_roles_filter]
}

input directus_shares_filter {
  max_uses: number_filter_operators
  times_used: number_filter_operators
  password: hash_filter_operators
  item: string_filter_operators
  collection: string_filter_operators
  name: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_start: date_filter_operators
  date_start_func: datetime_function_filter_operators
  date_end: date_filter_operators
  date_end_func: datetime_function_filter_operators
  id: string_filter_operators
  role: directus_roles_filter
  user_created: directus_users_filter
  _and: [directus_shares_filter]
  _or: [directus_shares_filter]
}

input directus_translations_filter {
  value: string_filter_operators
  key: string_filter_operators
  language: string_filter_operators
  id: string_filter_operators
  _and: [directus_translations_filter]
  _or: [directus_translations_filter]
}

input directus_users_filter {
  email_notifications: boolean_filter_operators
  description: string_filter_operators
  tags: string_filter_operators
  tags_func: count_function_filter_operators
  auth_data: string_filter_operators
  auth_data_func: count_function_filter_operators
  theme_dark_overrides: string_filter_operators
  theme_dark_overrides_func: count_function_filter_operators
  theme_light_overrides: string_filter_operators
  theme_light_overrides_func: count_function_filter_operators
  last_page: string_filter_operators
  token: hash_filter_operators
  status: string_filter_operators
  tfa_secret: hash_filter_operators
  language: string_filter_operators
  title: string_filter_operators
  location: string_filter_operators
  password: hash_filter_operators
  email: string_filter_operators
  last_name: string_filter_operators
  first_name: string_filter_operators
  theme_light: string_filter_operators
  theme_dark: string_filter_operators
  appearance: string_filter_operators
  external_identifier: string_filter_operators
  provider: string_filter_operators
  last_access: date_filter_operators
  last_access_func: datetime_function_filter_operators
  profile: profiles_filter
  id: string_filter_operators
  avatar: directus_files_filter
  role: directus_roles_filter
  policies: directus_access_filter
  policies_func: count_function_filter_operators
  _and: [directus_users_filter]
  _or: [directus_users_filter]
}

input directus_versions_filter {
  delta: string_filter_operators
  delta_func: count_function_filter_operators
  hash: string_filter_operators
  item: string_filter_operators
  collection: string_filter_operators
  name: string_filter_operators
  key: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [directus_versions_filter]
  _or: [directus_versions_filter]
}

input directus_webhooks_filter {
  was_active_before_deprecation: boolean_filter_operators
  data: boolean_filter_operators
  id: number_filter_operators
  headers: string_filter_operators
  headers_func: count_function_filter_operators
  collections: string_filter_operators
  actions: string_filter_operators
  status: string_filter_operators
  url: string_filter_operators
  method: string_filter_operators
  name: string_filter_operators
  migrated_flow: directus_flows_filter
  _and: [directus_webhooks_filter]
  _or: [directus_webhooks_filter]
}

input foodoffers_categories_filter {
  sort: number_filter_operators
  status: string_filter_operators
  external_identifier: string_filter_operators
  alias: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  translations: foodoffers_categories_translations_filter
  translations_func: count_function_filter_operators
  _and: [foodoffers_categories_filter]
  _or: [foodoffers_categories_filter]
}

input foodoffers_categories_translations_filter {
  be_source_for_translations: boolean_filter_operators
  let_be_translated: boolean_filter_operators
  id: number_filter_operators
  name: string_filter_operators
  languages_code: languages_filter
  foodoffers_categories_id: foodoffers_categories_filter
  _and: [foodoffers_categories_translations_filter]
  _or: [foodoffers_categories_translations_filter]
}

input foodoffers_filter {
  sort: number_filter_operators
  price_student: number_filter_operators
  price_guest: number_filter_operators
  price_employee: number_filter_operators
  redirect_url: string_filter_operators
  category: string_filter_operators
  status: string_filter_operators
  food: foods_filter
  alias: string_filter_operators
  date: date_filter_operators
  date_func: date_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  foodoffer_category: foodoffers_categories_filter
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  canteen: canteens_filter
  markings: foodoffers_markings_filter
  markings_func: count_function_filter_operators
  attribute_values: foods_attributes_values_filter
  attribute_values_func: count_function_filter_operators
  _and: [foodoffers_filter]
  _or: [foodoffers_filter]
}

input foodoffers_markings_filter {
  id: number_filter_operators
  markings_id: markings_filter
  foodoffers_id: foodoffers_filter
  _and: [foodoffers_markings_filter]
  _or: [foodoffers_markings_filter]
}

input foods_attributes_filter {
  show_on_card: boolean_filter_operators
  show_on_label_list: boolean_filter_operators
  full_width: boolean_filter_operators
  sort: number_filter_operators
  suffix: string_filter_operators
  prefix: string_filter_operators
  status: string_filter_operators
  image_thumb_hash: string_filter_operators
  image_remote_url: string_filter_operators
  icon_expo: string_filter_operators
  external_identifier: string_filter_operators
  background_color: string_filter_operators
  alias: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  image: directus_files_filter
  id: string_filter_operators
  group: foods_attributes_groups_filter
  translations: foods_attributes_translations_filter
  translations_func: count_function_filter_operators
  _and: [foods_attributes_filter]
  _or: [foods_attributes_filter]
}

input foods_attributes_groups_filter {
  sort: number_filter_operators
  background_color: string_filter_operators
  image_thumb_hash: string_filter_operators
  image_remote_url: string_filter_operators
  icon_expo: string_filter_operators
  icon: string_filter_operators
  status: string_filter_operators
  alias: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  image: directus_files_filter
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  food_attributes: foods_attributes_filter
  food_attributes_func: count_function_filter_operators
  translations: foods_attributes_groups_translations_filter
  translations_func: count_function_filter_operators
  _and: [foods_attributes_groups_filter]
  _or: [foods_attributes_groups_filter]
}

input foods_attributes_groups_translations_filter {
  be_source_for_translations: boolean_filter_operators
  let_be_translated: boolean_filter_operators
  id: number_filter_operators
  name: string_filter_operators
  languages_code: languages_filter
  foods_attributes_groups_id: foods_attributes_groups_filter
  _and: [foods_attributes_groups_translations_filter]
  _or: [foods_attributes_groups_translations_filter]
}

input foods_attributes_translations_filter {
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  id: number_filter_operators
  description: string_filter_operators
  name: string_filter_operators
  languages_code: languages_filter
  foods_attributes_id: foods_attributes_filter
  _and: [foods_attributes_translations_filter]
  _or: [foods_attributes_translations_filter]
}

input foods_attributes_values_filter {
  boolean_value: boolean_filter_operators
  number_value: number_filter_operators
  food_id: foods_filter
  string_value: string_filter_operators
  icon_value: string_filter_operators
  color_value: string_filter_operators
  foodoffer_id: foodoffers_filter
  id: string_filter_operators
  food_attribute: foods_attributes_filter
  _and: [foods_attributes_values_filter]
  _or: [foods_attributes_values_filter]
}

input foods_categories_filter {
  sort: number_filter_operators
  status: string_filter_operators
  external_identifier: string_filter_operators
  alias: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  translations: foods_categories_translations_filter
  translations_func: count_function_filter_operators
  _and: [foods_categories_filter]
  _or: [foods_categories_filter]
}

input foods_categories_translations_filter {
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  id: number_filter_operators
  languages_code: languages_filter
  name: string_filter_operators
  foods_categories_id: foods_categories_filter
  _and: [foods_categories_translations_filter]
  _or: [foods_categories_translations_filter]
}

input foods_feedbacks_filter {
  notify: boolean_filter_operators
  rating: number_filter_operators
  sort: number_filter_operators
  comment: string_filter_operators
  status: string_filter_operators
  food: foods_filter
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  profile: profiles_filter
  id: string_filter_operators
  foodoffer: foodoffers_filter
  canteen: canteens_filter
  _and: [foods_feedbacks_filter]
  _or: [foods_feedbacks_filter]
}

input foods_feedbacks_labels_filter {
  sort: number_filter_operators
  status: string_filter_operators
  image_thumb_hash: string_filter_operators
  image_remote_url: string_filter_operators
  icon: string_filter_operators
  alias: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  image: directus_files_filter
  id: string_filter_operators
  translations: foods_feedbacks_labels_translations_filter
  translations_func: count_function_filter_operators
  _and: [foods_feedbacks_labels_filter]
  _or: [foods_feedbacks_labels_filter]
}

input foods_feedbacks_labels_translations_filter {
  be_source_for_translations: boolean_filter_operators
  let_be_translated: boolean_filter_operators
  id: number_filter_operators
  text: string_filter_operators
  languages_code: languages_filter
  foods_feedbacks_labels_id: foods_feedbacks_labels_filter
  _and: [foods_feedbacks_labels_translations_filter]
  _or: [foods_feedbacks_labels_translations_filter]
}

input foods_filter {
  rating_amount: number_filter_operators
  sort: number_filter_operators
  rating_amount_legacy: number_filter_operators
  rating_average_legacy: number_filter_operators
  rating_average: number_filter_operators
  status: string_filter_operators
  image_thumb_hash: string_filter_operators
  image_remote_url: string_filter_operators
  id: string_filter_operators
  extra: string_filter_operators
  category: string_filter_operators
  alias: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  image: directus_files_filter
  food_category: foods_categories_filter
  feedbacks: foods_feedbacks_filter
  feedbacks_func: count_function_filter_operators
  markings: foods_markings_filter
  markings_func: count_function_filter_operators
  translations: foods_translations_filter
  translations_func: count_function_filter_operators
  attribute_values: foods_attributes_values_filter
  attribute_values_func: count_function_filter_operators
  _and: [foods_filter]
  _or: [foods_filter]
}

input foods_markings_filter {
  id: number_filter_operators
  foods_id: foods_filter
  markings_id: markings_filter
  _and: [foods_markings_filter]
  _or: [foods_markings_filter]
}

input foods_translations_filter {
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  id: number_filter_operators
  name: string_filter_operators
  languages_code: languages_filter
  foods_id: foods_filter
  _and: [foods_translations_filter]
  _or: [foods_translations_filter]
}

input form_answers_files_filter {
  id: number_filter_operators
  directus_files_id: directus_files_filter
  form_answers_id: form_answers_filter
  _and: [form_answers_files_filter]
  _or: [form_answers_files_filter]
}

input form_answers_filter {
  value_boolean: boolean_filter_operators
  sort: number_filter_operators
  value_string: string_filter_operators
  value_number: number_filter_operators
  value_custom: string_filter_operators
  value_custom_func: count_function_filter_operators
  status: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  value_date: date_filter_operators
  value_date_func: datetime_function_filter_operators
  value_image: directus_files_filter
  form_field: form_fields_filter
  form_submission: form_submissions_filter
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  value_files: form_answers_files_filter
  value_files_func: count_function_filter_operators
  _and: [form_answers_filter]
  _or: [form_answers_filter]
}

input form_categories_filter {
  sort: number_filter_operators
  icon_expo: string_filter_operators
  alias: string_filter_operators
  status: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  translations: form_categories_translations_filter
  translations_func: count_function_filter_operators
  forms: forms_filter
  forms_func: count_function_filter_operators
  _and: [form_categories_filter]
  _or: [form_categories_filter]
}

input form_categories_translations_filter {
  be_source_for_translations: boolean_filter_operators
  let_be_translated: boolean_filter_operators
  id: number_filter_operators
  name: string_filter_operators
  languages_code: languages_filter
  form_categories_id: form_categories_filter
  _and: [form_categories_translations_filter]
  _or: [form_categories_translations_filter]
}

input form_extracts_filter {
  send_attachments_as_links: boolean_filter_operators
  all_fields: boolean_filter_operators
  sort: number_filter_operators
  recipient_email_static: string_filter_operators
  alias: string_filter_operators
  internal_custom_id: string_filter_operators
  status: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  recipient_email_field: form_fields_filter
  recipient_user: directus_users_filter
  form: forms_filter
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  fields: form_extracts_form_fields_filter
  fields_func: count_function_filter_operators
  _and: [form_extracts_filter]
  _or: [form_extracts_filter]
}

input form_extracts_form_fields_filter {
  id: number_filter_operators
  form_fields_id: form_fields_filter
  form_extracts_id: form_extracts_filter
  _and: [form_extracts_form_fields_filter]
  _or: [form_extracts_form_fields_filter]
}

input form_fields_filter {
  is_required: boolean_filter_operators
  is_visible_in_form: boolean_filter_operators
  is_disabled: boolean_filter_operators
  is_visible_in_export: boolean_filter_operators
  sort: number_filter_operators
  external_export_id: string_filter_operators
  external_import_id: string_filter_operators
  field_type: string_filter_operators
  alias: string_filter_operators
  background_color: string_filter_operators
  image_thumb_hash: string_filter_operators
  image_remote_url: string_filter_operators
  icon_expo: string_filter_operators
  icon: string_filter_operators
  status: string_filter_operators
  value_suffix: string_filter_operators
  value_prefix: string_filter_operators
  internal_custom_id: string_filter_operators
  external_export_field_name: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  form: forms_filter
  image: directus_files_filter
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  translations: form_fields_translations_filter
  translations_func: count_function_filter_operators
  _and: [form_fields_filter]
  _or: [form_fields_filter]
}

input form_fields_translations_filter {
  be_source_for_translations: boolean_filter_operators
  let_be_translated: boolean_filter_operators
  id: number_filter_operators
  description: string_filter_operators
  name: string_filter_operators
  languages_code: languages_filter
  form_fields_id: form_fields_filter
  _and: [form_fields_translations_filter]
  _or: [form_fields_translations_filter]
}

input form_submissions_filter {
  sort: number_filter_operators
  internal_custom_id: string_filter_operators
  alias: string_filter_operators
  state: string_filter_operators
  status: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_submitted: date_filter_operators
  date_submitted_func: datetime_function_filter_operators
  date_started: date_filter_operators
  date_started_func: datetime_function_filter_operators
  date_locked_until: date_filter_operators
  date_locked_until_func: datetime_function_filter_operators
  user_locked_by: directus_users_filter
  form: forms_filter
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  form_answers: form_answers_filter
  form_answers_func: count_function_filter_operators
  mails: mails_filter
  mails_func: count_function_filter_operators
  _and: [form_submissions_filter]
  _or: [form_submissions_filter]
}

input forms_filter {
  sort: number_filter_operators
  icon_expo: string_filter_operators
  alias: string_filter_operators
  internal_custom_id: string_filter_operators
  status: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  category: form_categories_filter
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  form_submissions: form_submissions_filter
  form_submissions_func: count_function_filter_operators
  form_fields: form_fields_filter
  form_fields_func: count_function_filter_operators
  translations: forms_translations_filter
  translations_func: count_function_filter_operators
  _and: [forms_filter]
  _or: [forms_filter]
}

input forms_translations_filter {
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  id: number_filter_operators
  description: string_filter_operators
  name: string_filter_operators
  languages_code: languages_filter
  forms_id: forms_filter
  _and: [forms_translations_filter]
  _or: [forms_translations_filter]
}

input hash_filter_operators {
  _null: Boolean
  _nnull: Boolean
  _empty: Boolean
  _nempty: Boolean
}

input languages_filter {
  status: string_filter_operators
  name: string_filter_operators
  direction: string_filter_operators
  code: string_filter_operators
  _and: [languages_filter]
  _or: [languages_filter]
}

input mails_files_filter {
  id: number_filter_operators
  directus_files_id: directus_files_filter
  mails_id: mails_filter
  _and: [mails_files_filter]
  _or: [mails_files_filter]
}

input mails_filter {
  send_attachments_as_links: boolean_filter_operators
  sort: number_filter_operators
  log: string_filter_operators
  markdown_content: string_filter_operators
  template_data: string_filter_operators
  template_data_func: count_function_filter_operators
  status: string_filter_operators
  send_status: string_filter_operators
  template_name: string_filter_operators
  subject: string_filter_operators
  recipient: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  form_submission: form_submissions_filter
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  attachments: mails_files_filter
  attachments_func: count_function_filter_operators
  _and: [mails_filter]
  _or: [mails_filter]
}

input markings_exclusions_filter {
  id: number_filter_operators
  restricted_markings_id: markings_filter
  restricted_by_markings_id: markings_filter
  _and: [markings_exclusions_filter]
  _or: [markings_exclusions_filter]
}

input markings_filter {
  show_on_label_list: boolean_filter_operators
  invert_background_color: boolean_filter_operators
  hide_border: boolean_filter_operators
  show_on_card: boolean_filter_operators
  sort: number_filter_operators
  background_color: string_filter_operators
  short_code: string_filter_operators
  status: string_filter_operators
  image_thumb_hash: string_filter_operators
  image_remote_url: string_filter_operators
  icon: string_filter_operators
  external_identifier: string_filter_operators
  alias: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  group: markings_groups_filter
  user_updated: directus_users_filter
  user_created: directus_users_filter
  image: directus_files_filter
  id: string_filter_operators
  excluded_by_markings: markings_exclusions_filter
  excluded_by_markings_func: count_function_filter_operators
  translations: markings_translations_filter
  translations_func: count_function_filter_operators
  _and: [markings_filter]
  _or: [markings_filter]
}

input markings_groups_filter {
  sort: number_filter_operators
  status: string_filter_operators
  external_identifier: string_filter_operators
  alias: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  translations: markings_groups_translations_filter
  translations_func: count_function_filter_operators
  markings: markings_filter
  markings_func: count_function_filter_operators
  _and: [markings_groups_filter]
  _or: [markings_groups_filter]
}

input markings_groups_translations_filter {
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  id: number_filter_operators
  name: string_filter_operators
  languages_code: languages_filter
  markings_groups_id: markings_groups_filter
  _and: [markings_groups_translations_filter]
  _or: [markings_groups_translations_filter]
}

input markings_translations_filter {
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  id: number_filter_operators
  description: string_filter_operators
  name: string_filter_operators
  languages_code: languages_filter
  markings_id: markings_filter
  _and: [markings_translations_filter]
  _or: [markings_translations_filter]
}

input news_filter {
  sort: number_filter_operators
  categories: string_filter_operators
  categories_func: count_function_filter_operators
  url: string_filter_operators
  status: string_filter_operators
  image_thumb_hash: string_filter_operators
  image_remote_url: string_filter_operators
  external_identifier: string_filter_operators
  alias: string_filter_operators
  date: date_filter_operators
  date_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  image: directus_files_filter
  id: string_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  translations: news_translations_filter
  translations_func: count_function_filter_operators
  _and: [news_filter]
  _or: [news_filter]
}

input news_translations_filter {
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  id: number_filter_operators
  content: string_filter_operators
  title: string_filter_operators
  languages_code: languages_filter
  news_id: news_filter
  _and: [news_translations_filter]
  _or: [news_translations_filter]
}

input number_filter_operators {
  _eq: GraphQLStringOrFloat
  _neq: GraphQLStringOrFloat
  _in: [GraphQLStringOrFloat]
  _nin: [GraphQLStringOrFloat]
  _gt: GraphQLStringOrFloat
  _gte: GraphQLStringOrFloat
  _lt: GraphQLStringOrFloat
  _lte: GraphQLStringOrFloat
  _null: Boolean
  _nnull: Boolean
  _between: [GraphQLStringOrFloat]
  _nbetween: [GraphQLStringOrFloat]
}

input popup_events_canteens_filter {
  id: number_filter_operators
  popup_events_id: popup_events_filter
  canteens_id: canteens_filter
  _and: [popup_events_canteens_filter]
  _or: [popup_events_canteens_filter]
}

input popup_events_filter {
  show_on_android: boolean_filter_operators
  show_on_ios: boolean_filter_operators
  show_on_web: boolean_filter_operators
  send_notification: boolean_filter_operators
  sort: number_filter_operators
  image_remote_url: string_filter_operators
  status: string_filter_operators
  image_thumb_hash: string_filter_operators
  alias: string_filter_operators
  date_end: date_filter_operators
  date_end_func: datetime_function_filter_operators
  date_start: date_filter_operators
  date_start_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  image: directus_files_filter
  id: string_filter_operators
  canteens: popup_events_canteens_filter
  canteens_func: count_function_filter_operators
  translations: popup_events_translations_filter
  translations_func: count_function_filter_operators
  _and: [popup_events_filter]
  _or: [popup_events_filter]
}

input popup_events_translations_filter {
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  id: number_filter_operators
  content: string_filter_operators
  title: string_filter_operators
  languages_code: languages_filter
  popup_events_id: popup_events_filter
  _and: [popup_events_translations_filter]
  _or: [popup_events_translations_filter]
}

input profiles_buildings_favorites_filter {
  id: number_filter_operators
  profiles_id: profiles_filter
  buildings_id: buildings_filter
  _and: [profiles_buildings_favorites_filter]
  _or: [profiles_buildings_favorites_filter]
}

input profiles_buildings_last_opened_filter {
  id: number_filter_operators
  profiles_id: profiles_filter
  buildings_id: buildings_filter
  _and: [profiles_buildings_last_opened_filter]
  _or: [profiles_buildings_last_opened_filter]
}

input profiles_filter {
  notifiy_on_free_apartments: boolean_filter_operators
  sort: number_filter_operators
  credit_balance_last_transaction: number_filter_operators
  credit_balance: number_filter_operators
  course_timetable: string_filter_operators
  course_timetable_func: count_function_filter_operators
  avatar: string_filter_operators
  avatar_func: count_function_filter_operators
  status: string_filter_operators
  price_group: string_filter_operators
  nickname: string_filter_operators
  language: languages_filter
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  credit_balance_date_updated: date_filter_operators
  credit_balance_date_updated_func: datetime_function_filter_operators
  date_privacy_policy_accepted: date_filter_operators
  date_privacy_policy_accepted_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  id: string_filter_operators
  user_updated: directus_users_filter
  canteen: canteens_filter
  markings: profiles_markings_filter
  markings_func: count_function_filter_operators
  buildings_favorites: profiles_buildings_favorites_filter
  buildings_favorites_func: count_function_filter_operators
  buildings_last_opened: profiles_buildings_last_opened_filter
  buildings_last_opened_func: count_function_filter_operators
  devices: devices_filter
  devices_func: count_function_filter_operators
  foods_feedbacks: foods_feedbacks_filter
  foods_feedbacks_func: count_function_filter_operators
  _and: [profiles_filter]
  _or: [profiles_filter]
}

input profiles_markings_filter {
  dislike: boolean_filter_operators
  like: boolean_filter_operators
  id: number_filter_operators
  profiles_id: profiles_filter
  markings_id: markings_filter
  _and: [profiles_markings_filter]
  _or: [profiles_markings_filter]
}

input report_recipients_filter {
  sort: number_filter_operators
  mail: string_filter_operators
  name: string_filter_operators
  status: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  _and: [report_recipients_filter]
  _or: [report_recipients_filter]
}

input string_filter_operators {
  _eq: String
  _neq: String
  _contains: String
  _icontains: String
  _ncontains: String
  _starts_with: String
  _nstarts_with: String
  _istarts_with: String
  _nistarts_with: String
  _ends_with: String
  _nends_with: String
  _iends_with: String
  _niends_with: String
  _in: [String]
  _nin: [String]
  _null: Boolean
  _nnull: Boolean
  _empty: Boolean
  _nempty: Boolean
}

input time_function_filter_operators {
  hour: number_filter_operators
  minute: number_filter_operators
  second: number_filter_operators
}

input update_apartments_input {
  handicapped_accessible: Boolean
  singleflat: Boolean
  family_friendly: Boolean
  sort: Int
  status: String
  external_identifier: String
  available_from: Date
  date_created: Date
  date_updated: Date
  building: update_buildings_input
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
  washingmachines: [update_washingmachines_input]
}

input update_buildings_businesshours_input {
  id: ID
  buildings_id: update_buildings_input
  businesshours_id: update_businesshours_input
}

input update_buildings_input {
  sort: Int
  coordinates: JSON
  url: String
  status: String
  image_thumb_hash: String
  image_remote_url: String
  external_identifier: String
  alias: String
  date_of_construction: Date
  date_created: Date
  date_updated: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  image: update_directus_files_input
  id: ID
  translations: [update_buildings_translations_input]
  apartments: [update_apartments_input]
  businesshours: [update_buildings_businesshours_input]
}

input update_buildings_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  content: String
  languages_code: update_languages_input
  buildings_id: update_buildings_input
}

input update_businesshours_groups_input {
  sort: Int
  alias: String
  status: String
  date_created: Date
  date_updated: Date
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
  id: ID
  translations: [update_businesshours_groups_translations_input]
}

input update_businesshours_groups_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  name: String
  languages_code: update_languages_input
  businesshours_groups_id: update_businesshours_groups_input
}

input update_businesshours_input {
  wednesday: Boolean
  tuesday: Boolean
  thursday: Boolean
  sunday: Boolean
  saturday: Boolean
  monday: Boolean
  friday: Boolean
  sort: Int
  status: String
  time_start: Date
  time_end: Date

  """Leave empty to use default; overridden by other defined ranges."""
  date_valid_from: Date

  """Leave empty to use default; overridden by other defined ranges."""
  date_valid_till: Date
  date_created: Date
  date_updated: Date
  id: ID
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
  group: update_businesshours_groups_input
}

input update_canteens_input {
  """
  Beim Importieren von Speiseangeboten werden alle statischen Speiseangebote gelöscht, also die ohne Datum.
  """
  foodoffers_import_delete_all_without_dates: Boolean

  """
  Beim Importieren von Speiseangeboten sind die Angebote für alle Tage gültig und haben daher kein Datum.
  """
  foodoffers_import_without_date: Boolean
  sort: Int
  alias: String
  status: String
  external_identifier: String
  date_updated: Date
  date_created: Date
  id: ID
  building: update_buildings_input
  utilization_group: update_utilizations_groups_input
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
}

input update_devices_input {
  is_simulator: Boolean
  is_tablet: Boolean
  is_web: Boolean
  is_android: Boolean
  is_ios: Boolean
  is_landscape: Boolean
  sort: Int
  display_scale: Float
  display_pixelratio: Float
  display_height: Float
  display_fontscale: Float
  pushTokenObj: JSON
  display_width: Float
  system_version: String
  status: String
  platform: String
  brand: String
  alias: String
  date_created: Date
  date_updated: Date
  id: ID
  profile: update_profiles_input
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
}

input update_directus_access_input {
  sort: Int
  id: ID
  role: update_directus_roles_input
  user: update_directus_users_input
  policy: update_directus_policies_input
}

input update_directus_collections_input {
  meta: directus_collections_meta_input
}

input update_directus_comments_input {
  comment: String
  item: String
  collection: String
  date_created: Date
  date_updated: Date
  id: ID
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
}

input update_directus_dashboards_input {
  note: String
  color: String
  icon: String
  name: String
  date_created: Date
  user_created: update_directus_users_input
  id: ID
  panels: [update_directus_panels_input]
}

input update_directus_extensions_input_metaInput {
  enabled: Boolean
}

input update_directus_extensions_inputInput {
  meta: update_directus_extensions_input_metaInput
}

input update_directus_fields_input {
  collection: String
  field: String
  type: String
  meta: directus_fields_meta_input
  schema: directus_fields_schema_input
}

input update_directus_files_input {
  is_unreferenced: Boolean
  focal_point_y: Int
  focal_point_x: Int
  duration: Int
  height: Int
  width: Int
  filesize: GraphQLBigInt
  description: String
  location: String
  tags: JSON
  metadata: JSON
  tus_data: JSON
  tus_id: String
  embed: String
  charset: String
  type: String
  title: String
  filename_download: String
  filename_disk: String
  storage: String
  created_on: Date
  modified_on: Date
  uploaded_on: Date
  id: ID
  folder: update_directus_folders_input
  uploaded_by: update_directus_users_input
  modified_by: update_directus_users_input
}

input update_directus_flows_input {
  description: String
  options: JSON
  accountability: String
  trigger: String
  status: String
  color: String
  icon: String
  name: String
  date_created: Date
  id: ID
  operation: update_directus_operations_input
  user_created: update_directus_users_input
  operations: [update_directus_operations_input]
}

input update_directus_folders_input {
  name: String
  id: ID
  parent: update_directus_folders_input
}

input update_directus_notifications_input {
  id: ID
  message: String
  item: String
  collection: String
  subject: String
  status: String
  timestamp: Date
  recipient: update_directus_users_input
  sender: update_directus_users_input
}

input update_directus_operations_input {
  position_y: Int
  position_x: Int
  options: JSON
  type: String
  key: String
  name: String
  date_created: Date
  flow: update_directus_flows_input
  user_created: update_directus_users_input
  id: ID
  resolve: update_directus_operations_input
  reject: update_directus_operations_input
}

input update_directus_panels_input {
  show_header: Boolean
  height: Int
  width: Int
  position_y: Int
  position_x: Int
  note: String
  options: JSON
  color: String
  icon: String
  name: String
  type: String
  date_created: Date
  id: ID
  dashboard: update_directus_dashboards_input
  user_created: update_directus_users_input
}

input update_directus_permissions_input {
  id: ID
  fields: [String]
  validation: JSON
  presets: JSON
  permissions: JSON
  action: String
  collection: String
  policy: update_directus_policies_input
}

input update_directus_policies_input {
  """$t:field_options.directus_policies.enforce_tfa"""
  enforce_tfa: Boolean
  admin_access: Boolean
  app_access: Boolean
  ip_access: [String]
  description: String
  icon: String
  name: String
  id: ID
  permissions: [update_directus_permissions_input]
  users: [update_directus_access_input]
  roles: [update_directus_access_input]
}

input update_directus_presets_input {
  refresh_interval: Int
  id: ID
  filter: JSON
  layout_query: JSON
  layout_options: JSON
  color: String
  icon: String
  layout: String
  search: String
  collection: String
  bookmark: String
  user: update_directus_users_input
  role: update_directus_roles_input
}

input update_directus_relations_input {
  collection: String
  field: String
  related_collection: String
  schema: directus_relations_schema_input
  meta: directus_relations_meta_input
}

input update_directus_roles_input {
  description: String
  icon: String
  name: String
  id: ID
  parent: update_directus_roles_input
  children: [update_directus_roles_input]
  policies: [update_directus_access_input]
  users: [update_directus_users_input]
}

input update_directus_settings_input {
  """$t:fields.directus_settings.public_registration_verify_email_note"""
  public_registration_verify_email: Boolean

  """$t:fields.directus_settings.public_registration_note"""
  public_registration: Boolean
  auth_login_attempts: Int
  id: ID
  public_note: String
  custom_css: String

  """$t:fields.directus_settings.public_registration_email_filter_note"""
  public_registration_email_filter: JSON
  custom_aspect_ratios: JSON
  storage_asset_presets: JSON
  basemaps: JSON
  module_bar: JSON
  theme_light_overrides: JSON
  theme_dark_overrides: JSON
  report_feature_url: String
  report_bug_url: String
  report_error_url: String
  default_theme_dark: String
  default_theme_light: String
  default_appearance: String
  default_language: String
  project_descriptor: String
  mapbox_key: String
  storage_asset_transform: String
  auth_password_policy: String

  """$t:field_options.directus_settings.project_color_note"""
  project_color: String
  project_url: String
  project_name: String
  project_logo: update_directus_files_input
  public_foreground: update_directus_files_input
  public_background: update_directus_files_input
  storage_default_folder: update_directus_folders_input
  public_favicon: update_directus_files_input
  public_registration_role: update_directus_roles_input
}

input update_directus_shares_input {
  """$t:shared_leave_blank_for_unlimited"""
  max_uses: Int
  times_used: Int

  """$t:shared_leave_blank_for_passwordless_access"""
  password: Hash
  item: String
  collection: String
  name: String
  date_created: Date

  """$t:shared_leave_blank_for_unlimited"""
  date_start: Date

  """$t:shared_leave_blank_for_unlimited"""
  date_end: Date
  id: ID
  role: update_directus_roles_input
  user_created: update_directus_users_input
}

input update_directus_translations_input {
  value: String
  key: String
  language: String
  id: ID
}

input update_directus_users_input {
  email_notifications: Boolean
  description: String
  tags: JSON
  auth_data: JSON
  theme_dark_overrides: JSON
  theme_light_overrides: JSON
  last_page: String
  token: Hash
  status: String
  tfa_secret: Hash
  language: String
  title: String
  location: String
  password: Hash
  email: String
  last_name: String
  first_name: String
  theme_light: String
  theme_dark: String
  appearance: String
  external_identifier: String
  provider: String
  last_access: Date
  profile: update_profiles_input
  id: ID
  avatar: update_directus_files_input
  role: update_directus_roles_input
  policies: [update_directus_access_input]
}

input update_directus_versions_input {
  delta: JSON
  hash: String
  item: String
  collection: String
  name: String
  key: String
  date_created: Date
  date_updated: Date
  id: ID
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
}

input update_directus_webhooks_input {
  was_active_before_deprecation: Boolean
  data: Boolean
  id: ID
  headers: JSON
  collections: [String]
  actions: [String]
  status: String
  url: String
  method: String
  name: String
  migrated_flow: update_directus_flows_input
}

input update_foodoffers_categories_input {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
  translations: [update_foodoffers_categories_translations_input]
}

input update_foodoffers_categories_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  name: String
  languages_code: update_languages_input
  foodoffers_categories_id: update_foodoffers_categories_input
}

input update_foodoffers_input {
  sort: Int
  price_student: Float
  price_guest: Float
  price_employee: Float
  redirect_url: String
  category: String
  status: String
  food: update_foods_input
  alias: String
  date: Date
  date_updated: Date
  date_created: Date
  foodoffer_category: update_foodoffers_categories_input
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
  canteen: update_canteens_input
  markings: [update_foodoffers_markings_input]
  attribute_values: [update_foods_attributes_values_input]
}

input update_foodoffers_markings_input {
  id: ID
  markings_id: update_markings_input
  foodoffers_id: update_foodoffers_input
}

input update_foods_attributes_groups_input {
  sort: Int
  background_color: String
  image_thumb_hash: String
  image_remote_url: String
  icon_expo: String
  icon: String
  status: String
  alias: String
  date_updated: Date
  date_created: Date
  image: update_directus_files_input
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
  food_attributes: [update_foods_attributes_input]
  translations: [update_foods_attributes_groups_translations_input]
}

input update_foods_attributes_groups_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  name: String
  languages_code: update_languages_input
  foods_attributes_groups_id: update_foods_attributes_groups_input
}

input update_foods_attributes_input {
  show_on_card: Boolean
  show_on_label_list: Boolean
  full_width: Boolean
  sort: Int
  suffix: String
  prefix: String
  status: String
  image_thumb_hash: String
  image_remote_url: String

  """https://icons.expo.fyi/Index"""
  icon_expo: String
  external_identifier: String
  background_color: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  image: update_directus_files_input
  id: ID
  group: update_foods_attributes_groups_input
  translations: [update_foods_attributes_translations_input]
}

input update_foods_attributes_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  description: String
  name: String
  languages_code: update_languages_input
  foods_attributes_id: update_foods_attributes_input
}

input update_foods_attributes_values_input {
  boolean_value: Boolean
  number_value: Float
  food_id: update_foods_input
  string_value: String
  icon_value: String
  color_value: String
  foodoffer_id: update_foodoffers_input
  id: ID
  food_attribute: update_foods_attributes_input
}

input update_foods_categories_input {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
  translations: [update_foods_categories_translations_input]
}

input update_foods_categories_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  languages_code: update_languages_input
  name: String
  foods_categories_id: update_foods_categories_input
}

input update_foods_feedbacks_input {
  notify: Boolean
  rating: Int
  sort: Int
  comment: String
  status: String
  food: update_foods_input
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  profile: update_profiles_input
  id: ID
  foodoffer: update_foodoffers_input
  canteen: update_canteens_input
}

input update_foods_input {
  rating_amount: Int
  sort: Int
  rating_amount_legacy: Int
  rating_average_legacy: Float
  rating_average: Float
  status: String
  image_thumb_hash: String
  image_remote_url: String
  id: ID
  extra: String
  category: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  image: update_directus_files_input
  food_category: update_foods_categories_input
  feedbacks: [update_foods_feedbacks_input]
  markings: [update_foods_markings_input]
  translations: [update_foods_translations_input]
  attribute_values: [update_foods_attributes_values_input]
}

input update_foods_markings_input {
  id: ID
  foods_id: update_foods_input
  markings_id: update_markings_input
}

input update_foods_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  name: String
  languages_code: update_languages_input
  foods_id: update_foods_input
}

input update_languages_input {
  status: String
  name: String
  direction: String
  code: ID
}

input update_markings_exclusions_input {
  id: ID
  restricted_markings_id: update_markings_input
  restricted_by_markings_id: update_markings_input
}

input update_markings_groups_input {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
  translations: [update_markings_groups_translations_input]
  markings: [update_markings_input]
}

input update_markings_groups_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  name: String
  languages_code: update_languages_input
  markings_groups_id: update_markings_groups_input
}

input update_markings_input {
  show_on_label_list: Boolean

  """Invertiere die Hintergrundfarbe, wenn kein Bild vorhanden ist."""
  invert_background_color: Boolean

  """Keinen Rand verwenden"""
  hide_border: Boolean
  show_on_card: Boolean
  sort: Int

  """
  Falls das Bild transparenten Hintergrund hat, kann hier die Hintergrundfarbe gesetzt werden.
  """
  background_color: String

  """Kürzel, welches Nutzern angezeigt werden soll"""
  short_code: String
  status: String
  image_thumb_hash: String

  """
  Falls kein Bild hochgeladen wurde, kann auch auf ein Bild von einer anderen Seite angezeigt werden.
  """
  image_remote_url: String

  """Icon from: https://icons.expo.fyi/Index"""
  icon: String
  external_identifier: String

  """Interne Bezeichnung - Nicht sichtbar für Nutzer"""
  alias: String
  date_updated: Date
  date_created: Date
  group: update_markings_groups_input
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  image: update_directus_files_input
  id: ID
  excluded_by_markings: [update_markings_exclusions_input]
  translations: [update_markings_translations_input]
}

input update_markings_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  description: String
  name: String
  languages_code: update_languages_input
  markings_id: update_markings_input
}

input update_profiles_buildings_favorites_input {
  id: ID
  profiles_id: update_profiles_input
  buildings_id: update_buildings_input
}

input update_profiles_buildings_last_opened_input {
  id: ID
  profiles_id: update_profiles_input
  buildings_id: update_buildings_input
}

input update_profiles_input {
  notifiy_on_free_apartments: Boolean
  sort: Int
  credit_balance_last_transaction: Float
  credit_balance: Float
  course_timetable: JSON
  avatar: JSON
  status: String
  price_group: String
  nickname: String
  language: update_languages_input
  date_updated: Date
  credit_balance_date_updated: Date
  date_privacy_policy_accepted: Date
  date_created: Date
  user_created: update_directus_users_input
  id: ID
  user_updated: update_directus_users_input
  canteen: update_canteens_input
  markings: [update_profiles_markings_input]
  buildings_favorites: [update_profiles_buildings_favorites_input]
  buildings_last_opened: [update_profiles_buildings_last_opened_input]
  devices: [update_devices_input]
  foods_feedbacks: [update_foods_feedbacks_input]
}

input update_profiles_markings_input {
  dislike: Boolean
  like: Boolean
  id: ID
  profiles_id: update_profiles_input
  markings_id: update_markings_input
}

input update_utilizations_entries_input {
  sort: Int
  value_forecast_current: Int
  value_real: Int
  status: String
  date_start: Date
  date_end: Date
  utilization_group: update_utilizations_groups_input
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
}

input update_utilizations_groups_input {
  sort: Int
  threshold_until_low: Int
  threshold_until_medium: Int
  threshold_until_max: Int
  all_time_high: Int
  threshold_until_high: Int
  status: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
  utilization_entries: [update_utilizations_entries_input]
}

input update_washingmachines_input {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_stated: Date
  date_finished: Date
  date_updated: Date
  date_created: Date
  apartment: update_apartments_input
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
}

input utilizations_entries_filter {
  sort: number_filter_operators
  value_forecast_current: number_filter_operators
  value_real: number_filter_operators
  status: string_filter_operators
  date_start: date_filter_operators
  date_start_func: datetime_function_filter_operators
  date_end: date_filter_operators
  date_end_func: datetime_function_filter_operators
  utilization_group: utilizations_groups_filter
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  _and: [utilizations_entries_filter]
  _or: [utilizations_entries_filter]
}

input utilizations_groups_filter {
  sort: number_filter_operators
  threshold_until_low: number_filter_operators
  threshold_until_medium: number_filter_operators
  threshold_until_max: number_filter_operators
  all_time_high: number_filter_operators
  threshold_until_high: number_filter_operators
  status: string_filter_operators
  alias: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  utilization_entries: utilizations_entries_filter
  utilization_entries_func: count_function_filter_operators
  _and: [utilizations_groups_filter]
  _or: [utilizations_groups_filter]
}

input washingmachines_filter {
  sort: number_filter_operators
  status: string_filter_operators
  external_identifier: string_filter_operators
  alias: string_filter_operators
  date_stated: date_filter_operators
  date_stated_func: datetime_function_filter_operators
  date_finished: date_filter_operators
  date_finished_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  apartment: apartments_filter
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  _and: [washingmachines_filter]
  _or: [washingmachines_filter]
}

input wikis_directus_roles_filter {
  id: number_filter_operators
  wikis_id: wikis_filter
  directus_roles_id: directus_roles_filter
  _and: [wikis_directus_roles_filter]
  _or: [wikis_directus_roles_filter]
}

input wikis_filter {
  public: boolean_filter_operators
  show_in_drawer: boolean_filter_operators
  show_in_drawer_as_bottom_item: boolean_filter_operators
  sort: number_filter_operators
  position: number_filter_operators
  color: string_filter_operators
  url: string_filter_operators
  status: string_filter_operators
  icon: string_filter_operators
  custom_id: string_filter_operators
  alias: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  parent: wikis_filter
  id: string_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  roles_required: wikis_directus_roles_filter
  roles_required_func: count_function_filter_operators
  children: wikis_filter
  children_func: count_function_filter_operators
  translations: wikis_translations_filter
  translations_func: count_function_filter_operators
  _and: [wikis_filter]
  _or: [wikis_filter]
}

input wikis_translations_filter {
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  id: number_filter_operators
  content: string_filter_operators
  title: string_filter_operators
  languages_code: languages_filter
  wikis_id: wikis_filter
  _and: [wikis_translations_filter]
  _or: [wikis_translations_filter]
}

input workflows_filter {
  enabled: boolean_filter_operators
  sort: number_filter_operators
  alias: string_filter_operators
  status: string_filter_operators
  id: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  workflows_runs: workflows_runs_filter
  workflows_runs_func: count_function_filter_operators
  _and: [workflows_filter]
  _or: [workflows_filter]
}

input workflows_runs_filter {
  sort: number_filter_operators
  runtime_in_seconds: number_filter_operators
  log: string_filter_operators
  output: string_filter_operators
  input: string_filter_operators
  result_hash: string_filter_operators
  alias: string_filter_operators
  state: string_filter_operators
  workflow: workflows_filter
  status: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_finished: date_filter_operators
  date_finished_func: datetime_function_filter_operators
  date_started: date_filter_operators
  date_started_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  _and: [workflows_runs_filter]
  _or: [workflows_runs_filter]
}